@spring_raining 00:07
こんにちは。UITの玉田です。今回もUIT INSIDEを始めたいと思います。 UIT INSIDEは、ユーザーインターフェースとテクノロジーを愛する開発者のためのポッドキャストです。今回はですね、なんと特別編として、私たちは今サンフランシスコにいます。
@spring_raining 00:27
なぜかと言いますと、5月の14、15日に開催されましたGoogle I/Oに私たちは現在行っております。というか、今日行ってきました。 それについて、私たちが昨日と今日聞いてきたことを忘れないうちに皆さんで話していきましょうという感じの会になっておりますので。それでは、Google I/Oについて振り返っていきましょうという特別な会になっております。
@spring_raining 00:54
ちなみに、今我々はホテルの一室におりますので、ちょっと音声とかも聞き苦しいところがあるかもしれないんですけども。はい、ご了承いただければと思います。それではですね、はい。今回の参加者なんですけれども、お1人、今回ポッドキャスト初参加の方がいらっしゃいますので、じゃあ、浜田さん、何かこう、自己紹介など。
@mahamada 01:18
はい、Yahoo! Japanのトップページで開発をしています浜田と言います。よろしくお願いします。
@spring_raining 01:24
よろしくお願いします。お願いします。今回は4人このポッドキャストに参加していまして、今回ちょっと私もちょっと忘れかけてるので、思い出しつつ、いろんな話があったので、それについて皆さんにお伝えしていければなと思います。
@spring_raining 01:40
まず、内容に入る前なんですけども、多分皆さん、我々がどういうGoogle I/Oってなんだっていう感じになってるのかなっていうところもあるのかなと思うので、
@spring_raining 01:50
ざっくりどういった感じなのかってのをお伝えしようかなと思います。で、2日間あったわけなんですけれども、1日目が午前中に10時から全体のキーノートがあって、GoogleのCEOのサンダーピチャイが出てきて、わあって、盛り上がるみたいな感じで、色々な、こう、発表が立て続けにありました。で、それが午前中と、あと午後がデベロッパーキーノートが、
@spring_raining 02:18
あって、そのあと、こう、ブレイクアウトして、ウェブのセッションの会場みたいなのが、いくつか、トピックごとに、ブレイクアウトして、会場があって、その中の1つに、ウェブのトピックについて、専門に話す会場もありましたので、基本我々はこのwebの会場に行って、話を聞いてたっていう感じですね。
@spring_raining 02:38
で、2日目が、セッションが、色々なところで聞かれていたので、結構、バラバラだったかもしれないですね。
@TheoSteiner 02:45
うん、そうですね、AIとかのセッション、
@spring_raining 02:48
そうそうそう、そもそも、
@TheoSteiner 02:49
今回のイベント、AIすごい、
@spring_raining 02:52
AI推しでしたね、ほんとに、カウントされました。
@TheoSteiner 02:55
ピチャイさんもカウントしていて、120発表で120回も。
@spring_raining 03:00
そう、そうなんです。もう、ほんとにそれ、
@mahamada 03:03
99パーセントはAIの
@spring_raining 03:04
ですね、そんな感じなんで、結構こう、合間合間にこう、AIのトピックの、なんか、ほんとにこう、体験コーナーみたいなのがあったりとかして、ま、そんな感じで、すごい結構人数とかもあり、
@TheoSteiner 03:17
何千人、
@spring_raining 03:18
全員いますよね、ほんとに、なんか、そうですね、もう、ご飯とかもこう、時間になったらいっぱい出てきて、食べ放題みたいな感じで。 で、そうですね、あと会場があれですよね、ショアラインアンフィシアターっていうところなんですけれども、いわゆるそのGoogleのヘッドクォーターの近くというか、そばですね。そうです、はい、そばにありまして、屋外の、なんて言ったらいいんですかね、会場
@itatchi3 03:45
イベント会場、コンサートホール
@TheoSteiner 03:48
雰囲気すごいフェスっぽかった
@mahamada 03:50
ぽかったですね、野外フェスにかなり近い、
@TheoSteiner 03:52
飾りとかも
@itatchi3 03:54
外で、DJもいるし。
@spring_raining 03:59
そうですね、なんかYouTubeとか生中継だと、なんていう、ステージに向かった様子しか映ってないんですけども、後ろはもう完全に屋外だったりで、結構開放感なんで、そうですよね、フェスって感じです。
@mahamada 04:13
そのメインのセッションも、鳥のさえずりを聞きながらの中で喋ってたので、とても聞きやすい快適な環境でした。
@spring_raining 04:22
開放感としか言いようがないです。
@itatchi3 04:27
本当に自然の中でした。うん、
@TheoSteiner 04:28
カリフォルニアの大自然の中の会場。うんうん、ほんとに綺麗でした。
@spring_raining 04:34
私たちは最初、レンタカーで会場に行って、もう車自体も、その数千人が来るので、ずらっと並んでいたりっていう感じで、すごく大きいなっていう感じでしたね。そんな感じで、はい、もうご飯も出ましたし、選びたい放題でしたね。そうでしたね。
@itatchi3 04:58
めちゃくちゃ提供されましたね。
@spring_raining 04:59
めちゃくちゃ出ました。
@TheoSteiner 05:01
ヘルシー系のジュースとかも。
@mahamada 05:05
コーヒーも足りましたし、朝ごはんも提供されて、お昼も提供されて、食事の量は十分あったので、売り切れることなく十分な量が準備されていました。
@itatchi3 05:16
クッキーとかも配っていたり、いろんな種類の食事が、選びたい放題で
@spring_raining 05:22
めっちゃめっちゃ出てきてましたし。なんかそういう、数千人いるんで、すぐ
@itatchi3 05:27
わーって無くなりましたね。
@spring_raining 05:28
なくなったりとかっていう感じの。それでもいっぱい出てくるみたいな感じです。じゃあ、そろそろ本題に移りますか。まあ、ほんそれ。ほんとにそれだけ会場はすごく良かったなっていうところですね。本当にフェスですね。
@spring_raining 05:46
じゃあ、そうですね、順番に話していきますかね。最初のキーノートの話かなっていうところで
@spring_raining 05:52
ですけれども、ちょっと難しいのが、その、ほんとに、特に最初の全体のキーノート、ほぼAIだったので、ちょっとWebについて話せるところ、最初のその、キーノートは少なかったんですけれども、その後、デベロッパー機能とかあって、そこでは結構Webの話とかも出ていました。
@mahamada 06:12
それでも、ほんとに一部
@spring_raining 06:17
ぐらい、7分ほど、そうですね、Webの話としてはそれぐらいやってそうですね、やっぱりあれなんですよね、AIの話が出てくるんですよね。
@TheoSteiner 06:28
Geminiの新しいモデルとかいっぱい発表されていて、そのうちのGemini Nanoが、Chromeの中に
@spring_raining 06:38
ビルトイン、ビルトインで入って
@TheoSteiner 06:40
埋め込まれるってことです。そうですそうです、
@spring_raining 06:42
ビルトインAIっていうことなので、要するに、いわゆる私たちも、AIの、何かこう、やってもらうことって、なんですかね、こう、情報を送って、で、どこかでその、処理して帰ってくるっていうのを表示するっていうのが普通だと思うんですけど、それがその、ビルトインなんで、そのデバイスの中で完結する。
@spring_raining 07:04
で、その環境をChromeが提供するっていう話になってくるんですよね。
@itatchi3 07:10
うん。
@TheoSteiner 07:12
そのために、いくつかのAPIをWebのプラットフォームに追加する予定で、例えばトランスレーションとかは、そういう翻訳用の。
だから、そうですね、ビルトインモデルを使って、何かのテキストを翻訳するとか、そういうためのエリアをいくつか提供するみたいな話も出てます。そうですね。
@mahamada 07:35
オンデバイスのそのAIの特徴、いくつかその、Geminiで発表されたものの中で、ナノっていうのが、その特徴的なのが、オンデバイスっていう特徴なんですけど、このローカルで完結するんですね。つまり、ネットワークを介さないので、プライバシーが担保されるっていうのと、オンデバイスで動くので、そのMacの中で、その
@mahamada 07:58
Macとかパソコンの中で動くんですね。なので、比較的動作が高速っていう2つの特徴を持っていて、これまで発表されてきたAIの中よりも品質は劣るんだけれども、オンデバイスでそういったセキュリティだったり速度の面で有利というようなAPIが提供されるっていうですね。
@TheoSteiner 08:17
パソコンの中に、データセンターのように、なんかすごい強いGPUとか入ってないせいで品質はかなり下がると思います。
なんかパラメータ数ってだいぶ下がりますね。うん、
@spring_raining 08:31
そう。あとその時聞いて直後に確か質問質問ってかなんか話し合ったのが、なんかその、環境によってその性能が全然違うので、MacBook Proの上のChromeで動作するさせるのと、今持ってるAndroidで動作させるAPIとしては両方提供されるはずなんで、その時にどうやってそのモデルが、そう全然速度とか変わってくるんだけど、どうするんだろう。みたいなのは疑問には思ってたんですけど、
@itatchi3 08:58
どうなんですかね。同じモデルが乗っかるんですかね。AndroidとChromeだとそこもまだ何もわかってないですかね。
@spring_raining 09:08
なんかあれですね、結論としては、なんかそれぞれの、なんていうか、その性能に合わせたモデルがあらかじめ用意されてるんじゃないかみたいな、うん、話は、いや、想像想像なんですけど、してたんですけど、
@itatchi3 09:20
プラスでちょっと考えないといけないのは、今回はChromeに乗っかるっていう話なんですけど、他のSafariなど、はいはいはい、Firefoxなどがどう追従していくのかも議論した時に、別のAI、今回だとGemini Nanoなんですけど、Gemini Nanoの以外のまたSafariなど、そう、AIモデルを多分乗っけて実装しようと思うので、そういう時にアウトプットが変わってきそうだよねみたいな話は
@itatchi3 09:46
考えなきゃいけないなっていう議論をしてましたね。
@TheoSteiner 09:49
ウェブのプラットフォームを標準まで持っていけるかみたいなのがこれからのですね。
@mahamada 09:55
そうですね、うん。現状はまだChromeでしか使えないので、本当にこれからのその課題で、デベロッパーの評価いかんによっては乗らないかもしれないし、いかんによってはこう、逆に早く実装が進むかもしれないので、うん、ちょっと我々も早く試してみて。うんうん。Webエンジニアとしてどういうものができるのかっていうのは、これから色々こう議論が巻き起こるのかなと思っています。
@TheoSteiner 10:18
で、実際に使えるChromeバージョンですが、126のCanaryだからexperimentalのChromeでしか現在使ってないっていうけど、です
@itatchi3 10:30
けど、僕らが今すぐに試せるのは、開発ツールデビューパーツールで出たコンソールエラーとかワーニングについてGemini Nanoを使って、このエラーってどういう意味ですか。っていうのを教えてくれるツールはキーノートで発表されて、あ、はいはいはいはい。
@mahamada 10:47
もう1つ、ウェブでAIが載ったっていう話があって、それがそのコンソール画面のエラーのどういうエラー内容かをこう説明してくれるっていう機能が今回新たにChromeの中に搭載されるっていう話がありま、
@TheoSteiner 11:02
多分同じビルトインモデルを使われ、うんって言っているんですけど、はい、
@TheoSteiner 11:09
そうです。Gemini Nanoで
@itatchi3 11:11
気軽に試せる場として提供されているのが
@TheoSteiner 11:15
思ってます。で、AI以外の話ですけど、なんかネイティブと同じように、なんかスムーズな快適なアプリを作るようなAPIの話いっぱいですね。
@spring_raining 11:28
で、それでいうと、View TransitionsとSpeculation Rulesについての話ですよね。Speculation Rules、どっちもあれですよね、その存在自体は今回発表されたっていうわけではなくて、ちょっと前からですかね、なんか、うん、あったような気がするんですけども、そうですね、
@TheoSteiner 11:47
こういう新しいAPIが出ますよっていうアピールでしたね。
@spring_raining 11:51
ですね、はい。で、結構2つ、なんかあれですよね、見た目の話と、なんかその、プリフェッチの話で、ちょっと違う感じでは。やることは違うんですけども、なんか、どちらも、なんすかね、こう、ウェブの体験をよくするための、その、ページ遷移を、
@mahamada 12:09
うん、
@spring_raining 12:10
なんていうんすか、よりアプリっぽくするみたいな、うん、
@TheoSteiner 12:12
ネイティブアプリに負けないぐらいのウェブページを作れるような。うんうん、
@mahamada 12:19
Googleは一貫してそこを求めてますよね。その、よりこう、アプリのように、こう、快適に動ける体験っていうのを求めているので、今回はこの2つがフィーチャーされたっていう感じですね。Google I/Oって元々こう、何かすごい新しいものが発表されるというよりかは、オープンに進んだウェブの議論をサマライズしてこう伝えてくれるっていうような特徴があったので、今回フィーチャーされたこの2本っていうのは、その中でも特に
@mahamada 12:44
力を入れていくっていう証拠なのかなと思っています。
@spring_raining 12:47
なるほど、そうですね。さらっと話してしまったんですけど、TransitionsとかSpeculation Rulesってなんだっていう感じはあるかなと思うんですけど、Speculation Rules、すごい雑なまとめで言うと、今のようにプリフェッチとかプリレンダーのそういうルールをもう少しこう体系的にまとめたものという理解でいるんですけれども。そうですね、
@spring_raining 13:12
ちょっと具体的な実装で言うと、スクリプトタグのtypeにspeculationrulesですかね。speculationrulesですね。はいのアトリビュートを追加して、その中にJSONでこう、プリフェッチとかプリレンダーとか、そういったプリフェッチ系のルールをJSONで書く。で、そのルールが皆さんMDNとかもうすでにあるんで見てもらえればと思うんですけど、すごい
@spring_raining 13:39
あれですよね、
@TheoSteiner 13:40
クエリー言語っぽさはすごいありですよね。
@itatchi3 13:43
細かく定義して、プリフェッチなリプリレンダリーを、プリレンダリングをと任意の環境で、環境と任意の条件で指定できるんだな。
@mahamada 13:55
特徴的なのは、こう宣言的にどのページを先読みするのか、先にレンダリングしておくのかっていうのをこう事前に定義して書けるっていうのがこのAPIの特徴かなと思います。
これまで、もしこれがなかった場合って、JavaScriptで自分でコンテンツを取ってきてそれを使ったりとか、オフスクリーンキャンバスでレンダリングしておいて、それをこうメインのところに持ってくるとかっていうのを自分で書かなければ
@mahamada 14:20
ならなかったりとか、ウェブ標準の中にあるリンクタグのプリロードをこうやらなければならなかったですけど、そうじゃなくて、JavaScriptで宣言的にこのリンク先はこのURLのパスだったら読んでおくっていうようなことを事前に定義しておいて、それでブラウザが中で勝手にあのページを先読みしたりレンダリングしてくれるっていうのがすごく便利な機能。
@itatchi3 14:41
若干似たようなものとして僕が持ってたのはNext.jsのリンクコンポーネントは。うん、あれはSPA。そうなんですけど。うん。
あれは言ったらJSを元々プリフェッチしておくっていう話だと思ったんですけど、今回はHTMLからプリフェッチしておくそうですね。
@TheoSteiner 15:02
ドキュメントを全体的にフェッチして。で、プリレンダーであれば、もうブラウザが画面に出さないままでレンダーして、そのレンダーが終わった瞬間でスムーズにその2つを切り替えるっていう。はい、そうです。なんか本当にすごい素晴らしい技術です。
@mahamada 15:20
なので、JavaScriptも動く。いま次のページのJavaScriptも動いてしまうので、それは何かしら副作用もあると思うので注意して使う必要はあるんですけど、その分高速に、本当にページが一瞬で切り替わるような体験が可能になるかなと思うので、今後のwebの体験としても積極的に使っていきたい、考えたい機能
@mahamada 15:42
かなと。
@itatchi3 15:43
その分だけちゃんと条件を絞って、適切なタイミングでプリレッジとプリレンダリングをする必要があるっていう形ですよね。
@mahamada 15:52
そうですね。なので、闇雲にどのリンクもこうプリレンダーしとけば良いっていうものではなくて、適切にこう場所を特定してやっておく必要があるっていうものになっていると思います。
@itatchi3 16:02
そうですね。
@spring_raining 16:03
で、もう1つがView Transitionですね。View Transitionは、私が1番最初に知ったのは多分あれですかね、Astroがすごい。そうですね。Astro jsが出た同時に、というか、多分おそらく出る前からなんか連携してて、その、ほんと、View Transition発表されたと同時に、こうAstroが対応しますみたいな感じの話とかもあったりとかなんかしてて、
@spring_raining 16:29
すごいほんとにマルチページのトランジションなので、何かページを遷移するときにこうアニメーションさせるっていうところの制御についての機能なんですけれども、
@mahamada 16:40
View Transitionsのところをおさらいしておくと、要素を何かクリックした時に、例えばネイティブアプリだと、その要素をモーフィングして、次のページの大きな要素に移り変わりつつ、こう、シームレスに次のページに移るっていう体験が可能になってるんですね。
@mahamada 16:58
ただ、ウェブでこれまでそれをやろうとしてた時は、JavaScriptとかCSSを駆使して無理やりやるしかできなかった。なので、これが話に上がってたのはSPAのみの話だったんですね。で、今回このView Transitions APIというのを使うと、そのモーフィングして移動するっていう滑らかな遷移がほんとに簡単に可能になると。
これまでそれはSPAのみで、View Transitions APIも同じく提供されていたんですけれど、今回発表の中であったのは、それが
@mahamada 17:29
MPAでも問題なくそれが動くようになると。つまり、これまでウェブの普通のページ遷移ですね、何かリンクをクリックして次のページに行くっていうような普通のウェブの体験の中でも、アプリのようにうにょんとこう次のページにシームレスに移動するようなモーフィングがこのAPIで可能になるということになります
@TheoSteiner 17:53
でSPAの中のView Transitionを可能にするために、いくつかのJavaScript APIが提供されてたんですけど、MPAは、うん、ファーストロードとかでJavaScriptは動くんですけど、その 2つのページを切り替えるタイミングに1回JavaScriptの実行が終わるので、なんか宣言的なAPIが
@TheoSteiner 18:16
必要になっていて。で、そういう新しい、宣言的にHTMLとかCSSで、ここがページトランジションの新しいターゲットになるとか、そういうことが宣伝できるようなAPIが追加されたっていう話もあってました。
@mahamada 18:34
これはいいですよね、実現できると。ほんとにウェブの、遷移のさせ方とか体験が変わると思ってるんですよね。
やっぱりボタンをクリックして次のページにぱって切り替わるのって、ウェブだと慣れてしまっているけれど、やっぱり人間にとってはあまり自然ではない。そうですね。うん。
やっぱりそのクリックしたものがやはり広がったりとか、その行動がシームレスにやっぱり繋がるっていうのが1つ大きな変化なのかなと。
@TheoSteiner 19:02
あれ、すごい思い出します。Spotifyの中でアルバムの詳細を見るときに、リストの下にアートワークが左から右に移動して大きくなって、今からこのアルバムの詳細が見れるっていうことをユーザーもわかるので、こういうトランジションがあれば、なんかすごいユーザー体験が改善されるなって思います。そうですね。
@itatchi3 19:27
先ほどのView Transition APIと組み合わせることは結構大事だと思っていてて、Speculation Rules APIを使ってプリレンダリングしていかないと、View Transition APIを使ったとしても、ポチっと押してからちょっとローディングがあってウニョンって動くっていうような、体験が悪いような見た目になってしまうので、やっぱりこの2つのAPIの両方使っていい感じです。
@spring_raining 19:54
そうなんですよね
@mahamada 19:59
シームレスに動かすには、マルチページで、シームレスに動かすには、次のページを読んでおかないと、そもそもシームレスに、そのためのSpeculation Rules APIの説明だったのかなっていう気がしますね。
@spring_raining 20:13
なんか、今までだと、やっぱりそういう、フレームワーク使わないとできないっていうことが、できなかったことが、そのほんとにで、できるようになっていくっていうところが、今回やっぱり推し推しというか、そうですね、
@TheoSteiner 20:27
うん、基盤が強くなってるんですね。
@spring_raining 20:29
じゃあ、今までのがあれですね、デベロッパーキーノートの話になりますね。
@spring_raining 20:35
えっと、ウェブセッションの内容なんですけど、結構どう取り上げようかなってずっと迷ってたんですけども、じゃあほんとにあれですかね、皆さんがこう聞いてた中で印象的だったトピックについて、ざっくばらんに話すっていう感じでいきましょうかね。
@TheoSteiner 20:52
なんかやっぱりウェブってオープンなプラットホームなので、なんかこっそりGoogleが何か開発して、それをバーンって発表わけにはいかないんで、なんか前からちょっとずつ情報が漏れてるんで、なんかこれはすごい新しいなって思った情報はなかったんですけど、なんか改めて
@TheoSteiner 21:16
これからウェブにこういう便利な機能が増えるなっていうと思ったことは何回かあって。で、個人的に特に面白いなと思ったのがPopover API。ポップオーバーを作るための。はい、新しいCSSとJavaScript。
@spring_raining 21:35
はいはいはい、ありましたね。そうですね、
@TheoSteiner 21:39
今までPopper.jsとかそういうライブラリよりはほんとに苦労してたんですけど、もうああいうCSSのAPIが増えると、なんかすごい楽に。
@spring_raining 21:54
そうですね、結構あれですね、私もそうなんつうの、こう、ほんとに半分ぐらいは結構前からあるなっていう感覚ではあったんですけど、IOていう、こういう区切りでこうまとまって発表されると、やっぱり振り返りとかになりますし、すごい。それでも、私も知らなかったAPIとかもありましたし、そういういろんな内容が聞けましたね。
@itatchi3 22:18
僕も半分ぐらいは知っていたりしたんですけど、こうやってIOの中で、特にここに注目してかなり熱が入ってるなとか、そういうような話、スタイル、うんクラスがあったので、今後多分そう、そういうクラスがどんどん、どんどん押されてって、早いうちに意識して勉強して、
@itatchi3 22:39
はい、うちに使っていきたいなというなりましたね。
@mahamada 22:42
そうですね、いろんなこう技術がありましたけど、大体こうサマライズするような内容だったんですけど、これまでいろんなこうセッション聞いた中でも、やっぱ繰り返しこう言われるのが、CSSの中だとcontainer query
@mahamada 22:59
:hasとか、うん、この辺りは結構、そのCSSの書き方自体だったりとか、レスポンシブデザインのが概念自体、コンポーネントの作り方自体を変えるものだったりするので、結構個人的にはすごい押していて、Googleの方も先頭に話したりとか、2番目に話したりしてるので、結構うん押しているのかなっていう印象はありました。
@spring_raining 23:22
has、has。そうなんですよね、私も、もう使うと、なんかもう、なん前には戻れないみたいな、そう、そういうところがあるんですよね。ほんとに、なんか、多分発表でも、なんかすごい引用で、hasは、すごいなんかゲームチェンジャーみたいな、そ、そんな話をしてたような気がするんで、そういうところは私もhas、すごい好きなんですよ。助かる。
@mahamada 23:45
なんか、Unaさんがゴールデンエラって言ってて、ああ、言ってましたね、UIの開発のゴールデンエラって言ってたですね。それは多分、その、黄金時代っていう風に見てて思うんですけど、こういうその便利なAPIだったりWebAPIがもうどんどん出てきてるので、リッチなUIが非常に作りやすい時代になってるっていうことだと思っています。うんうん。で、これまでできなかったことが簡単にできる、
@mahamada 24:09
これまで複雑に作らなきゃいけなかったものがもう簡単にできるっていう、こういう時代になってきているので、Web開発者にとってはすごく面白いし、これから入る人にとってももう本当に学んでいけるとすごいいいのかなと思ってます。
@TheoSteiner 24:24
で、やっぱりそういうどんどん新しいAPIが追加されている黄金時代で、なんか早くそのAPIを使いたいなって多分開発者みんな思ってるんですけど、なんかコンパティビリティとかを考えたら、いつになったらこのAPIが使えるようになるかっていう問題はやっぱりあると思いますけど、そのためにも
@TheoSteiner 24:45
Baselineっていう便利な。はい、ツール前からあったんですけど、実は僕がそれ知らなくて、MDNとかに印が出ていて、その印の名前がベースラインですね。はいはい。
で、そのインジケータなんですけど、色が3つあって、まず緑色の印だったら、ほとんどのブラウザで
@TheoSteiner 25:07
30か月以上サポートされているAPIで、ほとんどのユーザーはこのAPIを無事使えるっていうことですね。だから、Baselineでぜひ、これか、なんか緑色のベースラインのですかね。はい、SVGを探してください。はい、
@spring_raining 25:26
アイコンありましたね。1年前ぐらいになんかあったんですよね、発表として。で、その、しれっとこのMDNに、すごい、皆さんも見覚えあるかなと思うんですけれども、ああいうアイコンがある。あれもすごい、そうですね、やっぱりあれですよね、今後こういう、なんですかね、こう、いろんな技術がほんとにそう、ゴールデンエアなんで出てくる中で、やっぱりそれ、ほんとにそういうの知るきっかけにもなりますし、
@spring_raining 25:51
なんかその基準みたいなのが今のタイミングで出てきてくれるのがすごいわかりやすくていいです。
@mahamada 25:57
ベースラインが元々その出た時で、Web開発者がなんでこう新しいAPIを使わないのかっていうのをGoogleの人がすごいずっとこう考えたりして、どうやったら普及させることができるのかなっていうのを考えた時に、アンケートの中からこれは使えるんだと思ってなかったみたいな結果が結構頻繁に出てきたんですよね。
なので、もうちょっとそういうのを仕組みとしてこう簡単にこれは使える、これはちょっとまだ難しいみたいなのを一般解としてこう出したっていうのがベースラインなのかなと。
@mahamada 26:30
よくWeb開発されてる方だったらCan I Useっていうウェブサイトを使ってここのAPIが使えるのかなって自分で見たりはすると思うんですけど、そこまでこう行きつかないような軽いWebエンジニアだったとしても、そのベースライン見とけば、ある程度のそのシェアのブラウザに対して問題ないよっていうところもすぐに理解できるっていうのはすごくキャッチーな仕組みだなと思って。
@spring_raining 26:54
webstatus.devですかね、サイトとしては。
で、そのベースラインがこう発表されたことで、要するに、あれですよね、逆引きができるようになったんですよね。そのベースライン、このベースラインがあるフィーチャーがこれですっていうところとかも一覧で見れるサイトとかが紹介されてましたよね。で、
@spring_raining 27:12
ほんとに、そこを見ると、すごい、あれですね、今、こう、来てる。来てるっていうか、使えるようになった機能がすごい数がある。
すごいか、今、今、見てますよね。なんか、すごい、はい、いっぱいあります。で、ほんとに、その中で、そうですね、この、これの中で、今回Google I/Oで紹介されたのほんとに一部だと思いますし、
@spring_raining 27:35
ほんとにそうですね。色々、色々ありますよね。なんかおすすめ。おすすめって。そう、私has、hasで、あ、Declarative Shadow DOMだ。そうですそうです。これ。これ、ちょっと話出てて、一緒に出て、Shadow DOM、ついにShadow DOMが
@TheoSteiner 27:52
あと思ったのは、ベースのWidely availableだから、誰でも使えるようなベースラインになるものが、今年の 8月からDialog要素 そうそうそうあるので、やっとDialogが使えるなってちょっと思いました。
@spring_raining 28:12
そうですね、これ、私もなんか見てて、確かにそうそうそう、もう使えるんだみたいな感じではやろそうな、これから、そうですね、これからこう、モーダルを作っていくときとか、今までのももう多分もうモーダル作ったことも何回もあると思うんで、そうですね。そう、そのあたりとかね。そうですね。ほん。Dialogってあれですよね、あと、モーダルだけPopoverと、
@TheoSteiner 28:37
そうですね、Popoverが
@spring_raining 28:39
Popoverが、あれですね、
@TheoSteiner 28:41
属性として。
@spring_raining 28:44
そうそうそう。
@TheoSteiner 28:45
で、これ確か来年か再来年のWidely availableになるので、とりあえずDialogだけが使えるそうです。なります。
@spring_raining 28:55
いや、もうそれでも十分なんですけど。このリンクを。そうですね、はい、そうですね。今話しているwebstatus.dev、ショウノートに貼ってありますので。はい。ぜひ皆さん見てみてください。すごいいっぱいあるんで。皆さん、推しのフィーチャーを見つけてください。
@spring_raining 29:13
今回皆さん参加してて、すごい、私と板井さん、ほんとに心の底から思ったのは、英語が話せるようにならないといけないというのを、そう、本当にそう、ずっとずっと思ってる。ていうのを、これ。これpodcastに載せてどう。意味あるのかわからないんですけど、
@itatchi3 29:37
なんか英語がやっぱできるとすごい。Google I/Oに参加して思ったのが、やっぱり日本のエンジニア界隈で話されている流行のトレンドと、海外の、アメリカで話されている流行の技術のトレンドがやっぱ若干違うなと思う。そうそう、そこの
@itatchi3 29:56
やっぱりトレンドも違うし、かつ結構参加して思ったのは、皆さんやっぱりウェブを改善しようとしています。このためにみんな参加してね。っていう感じで、結構参加する文化が育っていると思ってて。日本のエンジニア界隈はどちらかというと新しい最新技術についていこうというキャッチアップするのだと
@itatchi3 30:16
思っていて、やっぱりそこもやっぱ英語の力、英語の壁っていうのが結構バリアになってて、英語さえどうにかできたら、ちゃんとエンジニアリング界隈、JS界隈でちゃんとコミットできるようになっていくのかなっていうのがです。
@spring_raining 30:35
なんかやっぱワンテンポ遅れるんですよね、どうしても。それは今回ほんとに思いましたね。
@TheoSteiner 30:43
テオが結構、Solid.jsの
@TheoSteiner 30:44
Ryan Carniatoさんとか。はい。
@itatchi3 30:46
と、めちゃくちゃ楽しそうに話してて、そうですね、そこに全然入っていけないのがすごい悔しくて、
@TheoSteiner 30:54
そうですね、多分、なんか言い換えれば、なんかその、英語の勉強のためのモチベーションが欲しかったら、なんかこういうイベントに参加するのがすごく良さそうですね。でもなんかAngularチームとか、Vueのメンテナーとか、そういうなんかほんとにすごい方もこういうイベントに参加してるんで。 うん。なんかそういう人に会ってみたいなっていう気持ちであれば、こういうイベント参加するのほんとにおすすめです。うんうん。
@itatchi3 31:23
喋りたかった
@spring_raining 31:25
喋りたかった。
@mahamada 31:27
至るところに有名人いましたね
@itatchi3 31:30
ですね。気軽に声かけて気になる技術の話めちゃくちゃしたかったんですけど、
@TheoSteiner 31:34
AIに頼って同時通訳は無理だと思います
@spring_raining 31:38
AIに戻った。じゃあそうですかね。ほんとに。それはさておき、じゃあ、はい、エンディングに移ろうかなと思います。
@spring_raining 31:51
はい、というわけで今回は特別編ということで、昨日今日あったGoogle I/Oについては話していきました。 LINEヤフーのフロントエンド組織UITでは、このような技術的なキャッチアップを日々行っております。
@spring_raining 32:05
このエピソードを聞いて、何かご意見やご感想がありましたら、いつでも投稿してください。ハッシュタグ#UIT_INSIDEで投稿していただきますとスタッフが拾います。 それでは、ありがとうございました。
@itatchi3 32:18
ありがとうございました。
@TheoSteiner 32:20
ありがとうございました。
