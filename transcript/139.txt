@potato4d 00:04
こんにちは、UITのpotato4dです。ユーザーインターフェイスとテクノロジーを愛する、開発者のためのウィークリーポッドキャスト UIT INSIDE。今週も始めていきたいと思います。
@potato4d 00:28
の収集も担当されていた河野さんに、UIT内でのアンケートについて話を聞いていこうかなと思っております。えー、本日はよろしくお願いいたします、
@kazushikonosu 00:38
よろしくお願いします。
@potato4d 00:46
えー、では早速ですね。コウノさんの方にえー、UITsarvay2022ですかね。について、簡単にご説明いただいてもよろしいでしょうか。
@kazushikonosu 00:54
はいえー、UITでは毎年 大体年末になるんですけども、社内のフロントエンドエンジニアを対象にして、トレンドだったりとか、周辺ツールの利用状況を調査するために と、アンケートを実施しています。元々は、外部で
@kazushikonosu 01:09
一般のフロントやのエンジニアを対象にして行われてたアンケートがあったんですけども、それを社内向けにちょっとカスタマイズするところから始めて、現在では 全く独自のものとして、毎年アンケートを実施しています。
@potato4d 01:21
のー。なるほど、なるほど、 実際なんかこうもうもはや毎年恒例の行事にもなっていて、これまでもヨアテインサイドでも紹介したかなとは思うんですけど、今回はどれぐらいの人数の人がこのアンケートに参加されたんですかね。
@kazushikonosu 01:34
今年で言うと、12、3人のLINEのっと、フロントンネンジニアの方に回答していただいて、日本の拠点だけじゃなくて、韓国だったりとか。 ベトナムとかタイとか、海外の拠点の皆さんにも回答していただきました。
@potato4d 01:49
じゃ、結構グローバルなアンケートになってるっていう感じ
@kazushikonosu 01:51
です。そうです、まさにグローバルになってます
@potato4d 01:55
結構まあLINEの中だけとはいえ、こう日本だけで閉じているわけじゃないアンケートっていうことなんで、各国の事情も踏まえてこう、かなりこう。 技術のシェアみたいなのが、ガラパゴス的なものじゃない。回答がもらえそうで、面白そうですね。
@kazushikonosu 02:09
あ、そうですね、なんか特にやっぱりどうしてもこう。社内で普段関わってるプロジェクト以外のことっていうのは、 どんな技術だったりとか、どういうトレンドがあったりするかっていうのは、なかなか伝わらない部分もあったりするので、そういうことをこう社内でこうナレッジを共有するって意味。でも、 すごい役に立ってるかなっていう風に思ってます。
@potato4d 02:27
なるほど、なるほど、では、早速その中身見ていければなと思いますよろしくお願いしますお願いします。 ではですね、まず結構今回ザーっと見た感じ、かなりの項目があるよなと思っていて、1つずつ見ていってもいいんですけど、なんかできればこう全体的な特徴みたいなのをああれば教えていただきたいなと思ってるんですけど、なんか、こうざっと復完して、この辺りは こう面白いなと思った部分とかあったりしますかね。
@kazushikonosu 02:54
そうですね、なんか、去年まではあの技術的な質問だけ を行ってたんですけども、今年からはとエンジニアがどういう人たちかっていうことを、アンケートで収集しました。なので、そこを まずは見てみたいなと思います。
@potato4d 03:10
確かに、結構初めの方の質問は、その回答者自身の属性に関する話が多いですよね。
@kazushikonosu 03:16
あ、そうですよ、なんか、特に例えばリモートワークの話とかは、個人的に興味深いなと思いまし
@potato4d 03:23
おーリモートワークは、もう今全体の7割近くなんですね。
@kazushikonosu 03:28
そうですね、なんかとコロナが始まってから、実際にどれぐらいリモートワークが浸透してるかっていうのは、今までこう定量的にはわからなかったんですけども、 このアンケートを通じて、7割近いエンジニアがもう毎日リモートで勤務して、出社したいってことがわかったので、 それはすごい面白いなっていう風に感じました。
@potato4d 03:48
確かに、確かに、このオールウェイズの回答の人が7割近いですし、それに加えて、 まほぼ週1か2ぐらいしか出資しないよっていう人も、20パーセントぐらいいても、そこを合わせると、リモートが中心な人が9割強ですかね。
@kazushikonosu 04:02
ですね、もうほとんどの人がもうリモートを好んでいて、実際にオフィスでも人を見ないので、なんかそれがすごいこう。数字として現れて、興味深いなっていう風に思いました。
@potato4d 04:11
確かに、たまに出社してもま、こういる人はいるけれど、も、ま基本ほとんどいないよねっていう風な感じになってますもんね、あ、そうですね、 何か他に属性周りで気になったところがあったりしますか。
@kazushikonosu 04:23
そうですね、やっぱりLINEで特徴的なのは、結構言語に関する質問かなっていう風に思っていて、結構東京のLINEのオフィスでも、英語を使う プロジェクトはあったりするんですけども、それ以上にLINE福岡だったりとか、LINEプラuスとか、こう。拠点によって、 どういう言語を使ってて、どのぐらいの割合で使ってるかみたいなことがわかったので、こ、これもすごいLINEならではで、興味深い内容かなと思いました。ほうほうほう、
@potato4d 04:48
かなりあれなんですよね、拠点ごとによって、その使われてる言語の比率とかも変わってくる感じなんですかね。
@kazushikonosu 04:55
そうですね、まさになんか同じ国内の拠点でも、LINE福岡とかだと、英語を使ってるエンジニアの方が多かったりとかして、そこの対比も面白いなっていう風に思いました。
@potato4d 05:05
あ、確かに東京だと日本語がやっぱり圧倒的に使われている感じですけど、福岡に関してはもう英語の方が多いんですね。
@kazushikonosu 05:14
なんなら、9割ぐらいのエンジニアは英語に触れてるっていう結構衝撃的な内容。
@potato4d 05:20
確かに東京だとちょうど4割ですかね。が、英語に触れてるって感じなんで、もう本当倍以上の人が 英語を中心的に使ってるって感じなんで、かなりここもこう各拠点の色が出てる感じがありますね。 では、属性の話はえーと、結構特徴的なのはそれぐらいかなとは思うんで、技術的なところ。えー、いければなと思うんですけれども、なんか技術的なところで言うと、まずなんかこの辺が面白かったみたいなところあったりしますかね。
@kazushikonosu 05:48
そうですね、結構そのjavascriptのと、uiフレーマークについて聞いてる質問があるんですけど、も で、今までは結構ブートストラップとかが割と優勢だったのが、 ここ最近だとテイルウィンドとかこう。新しいものが出てきて、そういう変化が見られるのがすごい面白いなっていう風に思いました。
@potato4d 06:06
確かに本当ですねなんか、これまでやっぱり我々の社内っていうと、専用のあのー、ブーツトラップベースでのフレームワークがあるから。あのー、存在していたからっていうのもありますけど、かなりブーツトラップが優勢なところがありました。けれども、 そういった潮流から少しずつ変わってきてるような印象は受けますね。
@kazushikonosu 06:22
そうですね、で、あの経験だけじゃなくて、実際社内で何を使ってるかっていう設問も。別途あるんですけども、なんかそこを見てみると、やっぱり とbodoslapとかからま、talewindだったりとか、別のソリューションに移行してるのが見えて、それは面白いなという風に思いました。
@potato4d 06:39
あ、本当ですねもはやブーツ、スラップ、通常のブーツスラップよりは、テイルウィンドの方がこう利用率が高い状態になってきてるんですね。
@kazushikonosu 06:46
ま、ただなんかもう1つこう。この結果を見て思ったのは、ホテルウィンドとかが普及してるとはいえ、一方でまだやっぱりこう 何も使わないっていう選択肢をフルスプラッチで実装するみたいなことを選ぶ。エンジニアも結構多くて、なんかそれは それで興味深いなっていう風に感じました
@potato4d 07:06
な、ここは結構あれですね、なんか、LINEという会社がかなりこう、デザインを忠実に再現するっていう傾向があるからっていうのもにも、由来してそうな感じは ありますよね。
@kazushikonosu 07:16
あ、そうですね、結構デザイナーさんと話してて、ここは1ピクテル変えてほしいとか、すごいこだわりがある場面も多いので、やっぱそういうこのに対応するためには、 難を使ってるってエンジニアも多いのかなっていう風に推測できました。
@potato4d 07:29
ですね、 まあ、でもその中でも比較的テールウィンドとかはあれなんですかね。ジッズとかを使って、例えば他は4ピクセルだけど、ここだけ5ピクセルみたいなのにも対応しやすいっていうのもあって、ちょっとずつシェアが上がってきてるみたいな事情も、 なんかこうありそうな気がしてきますね。
@kazushikonosu 07:44
あ、そうですまさになんか衣とか あ、衣っていうのは、社内のグットストラップを基にしたツールなんですけども、衣だったりとかま、他のuifliマークとかに比べると、テilwindcssはこうメタ、css フレーマークの感じがすごい強く。てか、それがこう。特にデザインがこうしっかりしたサービスを実装する上では、こう強く効いてきてるのかなっていう風に感じました。
@potato4d 08:06
ですね、なんか、我々の仕事の仕方と、ペールウィンドの思想みたいなんがうまくマッチしてるような感じはしますな
@kazushikonosu 08:13
あ、うまくマッチしてると思います。
@potato4d 08:17
なんか、その他で言うと、なんか幽愛まりとかで興味深かったところあったりしますか。他に
@kazushikonosu 08:22
あ、結構cssプリプロセッサーの話がの別の質問であって、なんかそこで、今までであれば、結構タスだったりとか がよく使われてるっていう結果が出てきてたんですけど、もま、実際その何を使ってるかみたいなの 見ると、あんまり使われなくなってきてるみたいな結果が現れてたりして、それはあのすごい興味深いなっていう風に感じました。
@potato4d 08:46
なるほど、なるほど、 そうですね、なんか我々かなりもう今だとリヤクtベaスのプロジェクトとかももう支配的になってきて、こうサを使うとかっていうよりは、結構スタイルととかで完結するような機会も増えてきましたし。なんか、そういったプロプロセッサーみたいなのに依存するみたいな機会は ま、ポストcssとかは、テイルウィンドの都合であれど、あとはかなり減ってきてるような印象は受けますよね。
@kazushikonosu 09:06
そうですね、まさにその通りであんまりこうcssの枠組みで管理をしたりとか、拡張したりするってよりは まcsの技術は使ってるんですけど、もまリアクトだったりとか、js側から管理することが多いので、こういう結果になったのかなっていう風に感じました。
@potato4d 09:24
ですね、今、スタイルって話が上がりましたけど、なんかスタイルド回りとか、そういったcss、インジjsとかのソリューションに関するアンケートとかも取ったりしたんですかね。
@kazushikonosu 09:34
あ、そうですね、結構その最初の方では、ピュアなシス、周りのあの設問が多かったんですけども、一応、後半の方ではリアクトだったりとか。 え、ビューのspaを使う時のcssのソリューションについても、設問があります。
@potato4d 09:50
おお、その結果はどんな感じなんですか。
@kazushikonosu 09:54
こう意外だったのは、スタイルドコンポネーツだったりとか、イモーションだったりとかのライブラリーを使うよりも、シsスモジュールをを使う。みたいなことが好まれてる ケースが多くて、僕の周りのプロジェクトだと、結構スタイルドコンポーネンツとかを使うケースが多いので、全社的に見ると、そうでもないんだなっていうのが意外でした。
@potato4d 10:13
確かに、なんか、私もコノさんと同じプロジェクトに携わってることが多いんであれですけど、結構スタイルドコンポネントとか、まあと、チャクラaとかも最近だと使ってますけど、なんかこう。 あのー、結構スタイルドが中心な現場ではあるんで、これはなんか見てみると意外な感じがありますね。
@kazushikonosu 10:30
そうですね、もう1つ意外だったのがま。cssモジュールなり、スタイルドコンポネンツなりこリアクトでこうcssを使う、何らかの ソリューションを使わずに、全く別でcsを管理するっていうケースも結構多くて、え、35パーセントとかですかね。 か、それはきっとこうマックアップ、エンジニアみたいなのを別でえー。アサインしているプロジェクトとかだと、そういう風にあ、あの管理してるのかなっていう風に
@kazushikonosu 10:58
思ったので、結構LINE特有で意外だなっていう風に思いました。
@potato4d 11:03
そうですね、結構あ、LINEっていう会社だと、元々bgsとかがテンプレートエンジンと相性がいいってのもあって、そういったあの分業体制みたいなんがこう根強く生き残っている プロダクトもあって、特に歴史長いものとかだと。そうなんで、そういうプロジェクトだと、使わないっていう選択肢も出てくるっていう風な感じですかね。
@kazushikonosu 11:21
そうですね、まさにそんな感じだという風に思ってて、結構LINE特有の結果として、あの面白いなっていう風に感じました。
@potato4d 11:29
あ、もしかしたらあれかもしれないですね、そのケフをついで、cssモジュールみたいな形で、cssはcssし、各文化でま。移行先として、ちょうどよかったから、スタイルドより こう、ミスマッチしないみたいな感じなのかもしれないですよね。
@kazushikonosu 11:43
ああ、確かにそうですね。
@potato4d 11:44
既存のcssで書かれたコードみたいのを移行するってなった時に、スタイルドに移行すると、ちょっとコスト高いけど、 シssモジュールスなんだ。なら、分割してインポーとしていくだけなんで、やりやすいみたいなのを、結構事情として歩きはしてきましたね。
@kazushikonosu 11:57
確かに、こうどうしてもこう一気にダルコンポーネンスとかに移行するってなると、ハードルが高いと思うんですけど、cssモジュールとかを使う分には、 こうインクリメンタルに移行することも可能なので、そういう意味では、あの相性がいいかもしれないです。
@potato4d 12:11
そうですね、なんか、そういう事情も含まれてるようなアンケートな気はしました。 結構あれですね、スタイリング1つとっても、いろんなやり方が見えてきますし、会社の事情が見えてくるんで、面白いですね。
@kazushikonosu 12:23
そうですね、
@potato4d 12:25
ちょっと今css周りの話もしてきました。けれども、結構UITinside聞いてる人だと、やっぱりjs回りどうなってるか。みたいなのが聞きたい人も多いかなと思うんで、ちょっとそのあたり 聞いていければなと思いますけど、なんか、js周りで1番興味深いトピックって、どの辺りだったりしますか。
@kazushikonosu 12:42
僕がやっぱり好きで、特に気になってるのはま。以前スノーパックの話とかで出演させた言葉って、やっぱ、モジュールバンドラーのところが気になってますね。
@potato4d 12:52
おお、なるほど、なるほど、そのアンケートもあるんですね。
@kazushikonosu 12:56
そうですね、モジュールバンドラーについては、akの他にも社内でどういうあのモジュールバンドラーを使ってるかの利用状況についてであったりとか ま、その他にも、もし自分がこれからモジュールバンドラを選べるのだとしたら、どれを選ぶかっていう3つの観点で質問を行ったので、それぞれが別の角度でこう 発見があって、面白いなっていう風に思います。
@potato4d 13:18
じゃ、まだなんか今日はあれですかね。今の社内での利用状況から聞いていけると面白そうですかね、それで言うと、
@kazushikonosu 13:24
そうですね、社内の利用状況で言うと、やっぱり依然として、ウェブパックが強くて、エンジニアがどんなモジュールバンドラを使ってるか、 ユカウントで言うと、もう9割のエンジニアはウェブパックを使ってるので、まだまだだなっていう風に思いました。
@potato4d 13:39
確かにかなりこう、やっぱ根強い人気がありますよね、
@kazushikonosu 13:44
ですね、やっぱりこうウェブパックだとブラグインだったりとか、こう周辺の こうナレンジも多分まだまだこう蓄積されてる部分があると思うんで、なかなかこう。新しいソリューションに移行するのは、ハードルが高い面もあるのかなっていう風に想像しました。
@potato4d 13:57
そうですね、あ、なんかそれだけじゃなくて、各種cliツールとかが裏側でウェーブバックに依存してるみたいなケースもあるかなとは思うんで、そういったものを剥がすとかから考えるってなると、やっぱりウェブバパックが こう使われ続けるっていう側面は一ってありそうな気はしますよね。
@kazushikonosu 14:11
そうですね、
@potato4d 14:12
も、なんか一方であれなんですね。このアンケート見てると、bとか2位に踊りでてきてて、かなり
@kazushikonosu 14:18
普通
@potato4d 14:18
勢いはついてきてるような感じはしますよね。
@kazushikonosu 14:21
まさに、僕の周りでも、ビートを新しいケースだと、採用することも多くなっててま。そういう裸にもすごい合う、 マッチする結果になったな、という風に思います。
@potato4d 14:32
確かに、確かに、私たちも結構仕事の中で新しいリポジトレ作って、ちっちゃなコードベース管理するってなったけ。とりあえず、ビートから始めるみたいなんが ほとんどになりましたもんね、気がつけば
@kazushikonosu 14:42
そうですね、
@potato4d 14:43
やっぱり開発者体験もそうですし、ビルドが早いっていうのもあってこう。あと、考えることが少ないっていうのは、やっぱりあって こう。今後、かなり勢力を増していきそうな気配はありますよね。
@kazushikonosu 14:54
結構ビートでもうリスrに対応したりとか、割と複雑なことも、最近ではできるようになってきたので、あの十分にウェブパックをあ、置き換えるだけのポテンシャルがあるかなっていう風に 感じてます。
@potato4d 15:05
確かに、新規であれば、全然そのプロダクションで、がっつり使うコードベースの基盤でも、もう選択していいようなものになってますもんね。
@kazushikonosu 15:13
あ、そう思います
@potato4d 15:15
あ、それで言うとちょっと先取りしちゃいましたけど、このアンケートで、次のプロジェクトに使うなら、何っていうとこでもビートかなり強いんですね。
@kazushikonosu 15:22
あ、そうですね、ぽんウェブパックとビートが同じぐらいになってるので、きっとまた来年取ったら、あのビートがさらに伸びるだろうなっていう風に思うので、こっからも 目が離せないなっていう風に思いました。
@potato4d 15:33
確かに、1年後にはこれもう逆転しそうですもんね、この感じだとそうです この辺りはなんかあれですね、業界とも結構マッチしてるというか、先週のイワテインサイドで紹介したステートオブジjsでもこうウェイパックが徐々にこう弱まってきていて、 ビートが強くなってきている。やまかつbテストとか、周辺ツールもかなり使われてきてるってのが
@potato4d 15:54
ありましたけど、なんか、そこと同じように、社内の潮流も変わっていってるっていう感じがしますね。じゃ、次見ていきましょうか。
@kazushikonosu 16:03
はい
@potato4d 16:05
いて、なんか気になっていたのが、最近結構こうリアクトの状態管理みたいなの結構薄くなってきていて、あのhttpくらpクライアントとキャッシュみたいなんで、賄うみたいなのも増えてきたかなと思うんですけど、なんかそういった。 なんか通信周りとか、状態周りとかも結構アンケートとか取ってたりするんですかね。
@kazushikonosu 16:22
あ、そうですね、リアクトについては、リアクトの状態管理っていう観点で質問を用意していて、確かにこう。最近リラックスに全部 状態を載せて、シングルソース、オフスループでやるっていうよりは、まサーバーサイド載ステットだったら、あのサンサッククエリーに載せて ま認証周りだけちょっとステートに保持するとかこ、結構あのユースケースが色々変わってきてると思うんで、そういう状況を調査するためにも、
@kazushikonosu 16:49
あのリアクトの状態管理について設問を用意します。うん、
@potato4d 16:53
なるほど、なるほど、結果はどんな感じでした
@kazushikonosu 16:57
結果で言うと、やっぱりまだまだこう。プロダクションのコードで使ってるっていう面だと、リラックスが多いんですけど、もまリコイルも結構増えてきたりとか、ま、あとは、 そもそもじょ状態管理にライブラリーはいらないみたいな。結構あの強い意見もあったりとかして、バラエティに飛んだ結果になったかなと思います。
@potato4d 17:17
本当ですね、結構欄そのなしっていう風な回答が多くなってますし ま、これはあれですかね。人によって回答が違いそうですけど、こうコンテキストでいいっていう人もいれば、基本的にhtpクライアントに任せてるから、不要だよっていう人もいそうですし、なんか、こう欄の中にいろんな文脈が含まれてそうですけど、 こう全体で見ると、なんという回答がリラックスを超えてすらいるような状況なんですね。
@kazushikonosu 17:42
そうですね、このなんっていうのが、アサククオイリを使ってる人は、何を選んでたりとか。ま、実際どこまでなんなのかっていうのはわからないですけども、あの 状態管理はいらないっていう選択肢もまあ、ありうるようになってきたのかなっていう風に感じました。
@potato4d 17:57
確かに、これもなんかこう、最近の近年のフロントインの変化っていう風な感じがしますね。 でも、あれですね、今後も欄aはあの一定数増えていくかなとは思う。一方で、やっぱり我々のプロジェクトだと、おっきな規模のプロジェクトとかも多いかなとは思うんで、そういうとこだと、引き続き、リダックスとかも支持されそうな気はしますね。
@kazushikonosu 18:17
あ、そうです、
@potato4d 18:19
ここはちょっと来年以降の変化も期待ですね。
@kazushikonosu 18:22
あ、そうです
@potato4d 18:23
ちなみに今回htpクライアントのところは、ステートマネジメントに含めないっていう感じでやってるかなと思うんですけど、なんか、クライアント周りとっかって、どっかでこう別途アンケートの事項として、取ってたりするんですか。
@kazushikonosu 18:34
アンケートでは、えーっとグラフqューエルだったりとか、探索クエリとかの利用状況みたいのは、あの質問としては用意したんですけども、 正直あんまり使われてる傾向がなくて、今回のブログの記事では、内容を省略しました。
@potato4d 18:51
なるほど、そうだったんですね、 おお、結構意外ですね。なんか、我々のプロダクトって、今もう全部タンスタッククエリーま、ちょっと。まだパッケージとしては、リアクトクエリーのやつを使ってます。けど、 結構こう普及してきたのかなっていう気もしましたけど、なんか、こうプロジェクトによっては、やっぱりま息の長いプロジェクトが多いからっていうところもあるかもしれないですけですけれども、
@potato4d 19:13
これからっていう風な感じなんですね。
@kazushikonosu 19:15
そうですね、ま、これからになるのかな、また、来年に期待したいなっていう風に思いました。
@potato4d 19:21
確かに来年はなんか特筆すべきトピックの1つになると、また面白そうですね。
@kazushikonosu 19:26
あ、そうですね
@potato4d 19:29
えと、結構今リアックトの話をえー、かなりえー、深くやってしまったかなと思うんですけど、今回ビージースに関するものも結構アンケート書いていたかなと思っていて、なんか、できればその辺りの特徴も聞いていければなと思うんですけど、なんかここで面白いものってあったりしますかね。
@kazushikonosu 19:43
あ、はい、リアクトの方で、リラックスとか、リコールとかの状態管理について聞いたのと同じように、ビューでもビューの状態管理について、どうしてるか ていうのを聞いてみて、それがこ衝撃的な結果になったと感じていますね。
@potato4d 20:00
お、それはどんな感じだったんですか。
@kazushikonosu 20:02
とリアクトの場合だと、まリコイルっていう新しいライブラリーが出てきて、ある程度 認知と使用がされてる結果になったと思うんですけども、ビューの方を見てみると、ビューxの光景として登場したぴピニアがあんまり認知されてないように使われてない で、結果になったので、そこがちょっと意外だったなっていう風に思います。
@potato4d 20:23
なるほど、確かに今ちょっとその歌手のアンケート開けてみましたけど、 かなりこう。圧倒的にビuxが優勢で、ピニaはまだ細々と使われてるぐらいにとどまってそうですね。
@kazushikonosu 20:34
そうですね、結構知らないっていう人も4割ぐらいいて、あ、まだまだリアクトの状況と比べると、その新しいライブラリーが 認知されてないんだなっていうのが意外でした。
@potato4d 20:46
なんか、その心はどういったところに由来して、そうなんでしょうね、
@kazushikonosu 20:50
結構ま僕のあくまで想像ですけども、リアクトでこうリラックスの後に、リコイルが登場した時っていうのは、結構そのメンタルモデルみたいな、 どういうアイデアかっていうところから変わってて、割とドラスティックな変化になってたと思うんですけど、ビューxとペニアの関係性で言うと、正当な光景で、 実際のこう使い方とかは大きく変わらないので、新しいライブラリーについても、どういう変化し
@kazushikonosu 21:15
をしてるかが分かりにくいみたいなところがあったりとかするのかなっていう風に思いました。そういうことがま、認知だったりとか、使用に影響してるのかなっていう風に感じました。
@potato4d 21:25
確かに、結構リコールとかであれば、こう移行する強いインセンティブみたいなのがあるのかなと思うんですけど、移行したことによって、得られる恩恵とか、今の課題が解消できる みたいなのがあるのかなと思うんですけど、結構ピニアとかになると、あのミューテーションとアクションが整理されたみたいなこう、小さめな変更が多くて、なかなかダイレクトに、自分の現場のビューxの課題を解消してくれるみたいなのとは、また、別の こうベクトルの技術になってしまうんで、そういう意味であんまりこう意向のモチベーションが湧きづらいみたいなのはあるかもしれないですね。
@kazushikonosu 21:56
そうですね、
@potato4d 21:57
なんか極端な話言ってしまえば。今、ビュエクで動いてるプロジェクトをあえて、ピニアに移行して、得られる恩恵っていうのが、こう使い続けるものと比較して、そんなに大きくないっていう風になると ま、今のもので、特に歴史のあるプロジェクトほどいいやっていう風な意思決定になりがちだだなと思うんで、なんかそういうところに由来してそうな気配はしますね。
@kazushikonosu 22:15
あ、そうですね、きっと多分リコイルとかの例で言うと、ちょっとずつリコイルを導入していく、みたいなことも可能だと思うんですけど、ピニアの場合は、 どちらかというと、ビxからまるっと置き換えるみたいなフローの方が想像できるのかなっていう風に感じていてま。そういうところも結果に影響してるのかなっていう風に思いました。
@potato4d 22:33
確かになんかこう別に何も変わらないけど、フルでリグレッションはしたい、変更みたいな感じになりますもんね、内容としては
@kazushikonosu 22:43
んです。
@potato4d 22:44
確かにそう考えると、移行しづらいが、恩恵もそこまで大きくないみたいなところが響いてきそうなのかなとは思いますね。
@kazushikonosu 22:52
思いました。
@potato4d 23:39
確かにそうですね、全体と東京だけで見るとけいこ傾向が大きく変わってるような印象は受けますね。 今回、ビu2とビu3を別で集計してますけど、こう合算すると、リアクとほぼ変わらないぐらいに東京はなってますもんね。
@kazushikonosu 23:55
そうですね、で、こう因果関係については全然わからないんですけども、やっぱりな周りの LINEの東京のエンジニア見てると、結構ビ由のプロダクトに関わってることもあったりとかしてまさ。そこも何らか関係があるのかなっていう風に 思ったりしました。
@potato4d 24:13
そうですね、結構なんかLINEは歴史的にあのー、結構初期のビューの位置系が出る前か、 前ですかね。なんか、0kぐらいの時からコミュニティに関わってたキタさんって方がいらっしゃって、もう今退職されたんですけど、その人がbjsを結構 初期の方に押し進めて、そこでバーっと普及したっていう。えー、流れがあるんで、その流れが今でも残ってるような感じはしますね。
@kazushikonosu 24:35
なるほど、です
@potato4d 24:37
きたけいさんのtwitterせっかくなんで、あのシノートに載せておこうかなと思います。 ま、ただ、なんか全体で見ると、それが東京で起きたムーブメントであって、こう全体には とはまた別の話なのかなとは思うんで。なんかよりこう。グローバルなアンケートになると、そういう結果が見えてくるのかなっていう風な印象はきますしたね、
@potato4d 24:58
なんかでもあれですね。2年ぐらい前のアンケートだと、まだ全体で見ても、あの東京の影響力はおっきいからか、bujsが50パーセントで、アクトが45パーセント、その他が5パーセントみたいな構成だったのが、 ついにリアクトが追い抜いた感じがして、なかなか興味深い結果だなとは思いましたね。
@kazushikonosu 25:17
そうですね、特にネクストジェースとか、ナクストまで含めると、リアクトがさらにこう差を広げる形になってるので、 リアクトの勢いが圧倒的だなって。
@potato4d 25:28
あー、本当ですねこれね、ネクスジェイスの部分を上にリアクトの上に積むと、結構すごい使用率になりますもんね。
@kazushikonosu 25:36
です。
@potato4d 25:38
確かに、確かにこれはちょっと来年以降のトレンドもぼちしていきたいですね。
@kazushikonosu 25:44
そうです、
@potato4d 25:47
もう1つ気なっていたのが、さっきえー。バンドラーのところでも、 ビートとビーテストって話を少しだけしたかなと思うんですけど、かなりテスティングツールの方も、流れが変わってきてるのかなとは思っていて、そのあたりの質問もあったりしますかね。
@kazushikonosu 26:02
あ、そうですね、テストについても、経験と社内での使用状況っていう2つの観点から質問を行っていて、選択肢自体 では。えっとー、ジストの他にビテストもあったんですけども、こっちについては思いの。他、ビテストの採用例は少なくて、いまだにジストがどうかなっていう 結果になりました。
@potato4d 26:22
確かにもう圧倒的ですね、8割ぐらいがジェストを採用してるような感じですかね。
@kazushikonosu 26:27
そうですね、結構他のライブラリとかもいくつか列挙してみたんですけど、やっぱりあんまり使われてなくて、実際強なんだなっていう結果になりましたね。
@potato4d 26:36
確かにそれに追随してきてるサイプレスとか、パpetiaとか、プレイライトも全部ジェストをこう保管してくれるというか、 こうジェストでできない部分をこっちでカバーしてるっていう感じがするんで、これらに入れた人は、多分ジェストと併用してるんだろうなってのが見て取れそうなアンケート結果ですね。
@kazushikonosu 26:53
ああ、そうです
@potato4d 26:55
確かに引き続き、ここはなんかジェストを完全に軸にして、必要に応じて、他のツールを選定するみたいな感じになって、そうな感じがしますね。
@kazushikonosu 27:04
いや、そうなると思いますね、
@potato4d 27:06
なんか、また来年以降流れが変わったら見ていきたい感じはありますね。
@kazushikonosu 27:11
そうですね、ちょっとビーテストがビートの普及度合に比べると、まだまだまだで、今後に期待いかなっていう風に見ました。
@potato4d 27:19
ですね、 えーでは結構見ていきましたけど、最後に少し気になってるのがアクセシvtへの質問があるなと思っていて、この辺りもちょっと紹介してもらってもいいですか。
@kazushikonosu 27:30
はい、LINEeの社内だとと、社内向けのドキュメントとしてと、LINEアクシシビリティガイドLINEっていうものがありまして、そこで、アクセシビリティのベストプラクティスについて考えれるようになっています。ま、これ以外にも、あのアクセシビリティのツールっていうのはいくつかあると思うので。 そのアクセシビリティに対する取り組みがどのようになってるかっていうアンケートを行いました
@potato4d 27:53
結果としては、結構あれですかね。社内のガイドLINEは、ちゃんと読んでいる人がすごい多いっていう風なところですかね。
@kazushikonosu 28:01
そうですね、ま、それでもまだ非45パーセントぐらいなので、まだまだこれからではあると思うんですけど、も で、一応、アクセシビリティに関する取り組みとしては、社内のガイドLINEをやっぱ読んでる人が多いのかなっていう結果になりました。
@potato4d 28:14
こう、なかなか専用のキャッチアップがしづらい人でも、これを読むと、ある程度網羅できるみたいな状態にはなっているかなとは思うんで、なんかこん。今後良くはなっていきそうなところではありますよね。
@kazushikonosu 28:24
そうですね、やっぱりどうしても公式のドキュメントだったでっていうのは、結構こうとっつきにくいというか、なかなかこうハードルが高い面もあると思うんで、社内で 実際すぐに使えるノウハウとかを読むって意味では、linアクセシビリティガイドLINEが結構役に立ってるのかなっていう風に感じる結果になりました。
@potato4d 28:43
確かにそうですね、 結構なんか我々もやっぱりあれですよね。こうちゃんとボタンをボタンとして実装するとか、オルトをちゃんとつけるとかは、こう最低限はちゃんとやってはいても、なかなか深いところまで、常に業務でできてるかっていうと、そうじゃないことが多いですし、なんかこう、 これは我々も頑張っていかないといけないところだよなって感じはしますよね。
@kazushikonosu 29:04
やっぱ今後伸びていくようにしてきたいなっていうま、そういう結果になったなと思いま。
@potato4d 29:08
そうですね、うん、うん、まかでも、そういう意味で言うと、どんどんボトムLINEは上がっていってる気はするんで、こうこういうのって、やっぱり 影響力みたいのはあるんだなと、改めて感じさせられる内容ではありますね。そう思いました え、これで結構もうえ、ツーリングサービの中身はざっと見ていったかなと思うんですけど、なんか、こう実施した側のこの参観点で、来年こういったところをさらにこうちしていきなたいなとか、来年はこういった内容も取ってみたいみたいなのがあれば、何か一言いただければなと思うんですけど、
@potato4d 29:38
なんかあったりしますかね。
@kazushikonosu 29:40
そうですね、結構今年リアクトだったりとか、ビューの状態管理のあの設問を増やして、 で、リダックスからリコエルへの移行だったりとか、フィニアがあんまりこう。普及してない状況みたいのがわかったので、ま、来年はさらにそこを見ていって、 状態管理、周りのトレンドがどのように変化していくか、みたいなのは、追ってきたいなっていう風に思いました。
@potato4d 30:02
確かにこう我々としても、どんどん移行していきたいモチベーションもあるはず。なんで、こうどうなっていくかが、楽しみなところではありそうですね。
@kazushikonosu 30:09
そうですね、あと、結構このアンケートを実施してる身だと、その他みたいなところで、自分が全く聞いたことがなかったライブラリーだったりとか、 ツールについて知ることができているので、なんか、来年以降もこのアンケートを通して全く違うツールだったりとか、 ライブラリーとかについて知りて、知っていけたらなっていう風に思ってます。
@potato4d 30:32
確かになんかそれあれですね、なんか、実施する側の旨味でもありそうですね。
@kazushikonosu 30:36
そうです、これで勉強しています。
@potato4d 30:41
えーというわけで、今回はUITサービエのえ、2022年版について振り返っていきました。LINEのフロンテンド組織UITでは、このようなフロンテインドに関するえ、議論や意見交換を日々行っております。
@potato4d 31:06
また、このポットキャストに関するご意見、ご感想は。えー、twitterのハッシュタグで受け付け、受付けております。ハッシュタグハッシュ、UIT、アンダースコアインサイド見てつぶやいていただけます。と、スタッフの方で拾っていこうかなと思っておりますので、ぜひ何かあればお気軽にツイートいただければと思います。というわけで、今回はUITsarvay2022について話していきました、ありがとうございました。
