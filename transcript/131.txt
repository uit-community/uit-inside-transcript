@g4rds 00:04
こんにちは、UITの泉水です。ユーザーインターフェースとテクノロジーを愛する開発者のためのウィークリーポッドキャスト、UIT INSIDE。今週も始めていきたいと思います。今回は、先月、Node.jsのコアコラボレーターになった上野さんをお呼びして、お話を聞いていきたいと思います、 よろしくお願いします
@cola119 00:25
よろしくお願いします
@g4rds 00:32
ということで、今回ご出演いただく上野さんは前回UIT INSIDEにご出演いただいてから、ちょうど1年ぶりですので、改めて自己紹介していただけますでしょうか。
@cola119 00:44
はい、わかりました。えーっと、上野康平と申します。LINEには、2019年の11月に新卒で入社しました。 で、まあ、新卒で入社してから、いくつかファミリーサービスのフロントエンド開発をしてきていて、今は約2年ほどLINEバイトのフロントエンド開発をメインで担当しています。
@cola119 01:10
で、あと、それに加えて1年ほど前からえーっとLIFFという、LINEフロントエンドフレームワークのJavaScript SDKの開発にも従事しています。よろしくお願いします。
@g4rds 01:24
よろしくお願いします。実は、上野さんは僕と同じチームで
@cola119 01:30
そうですね。はい。
@g4rds 01:33
よく出社すると上野さんいらっしゃるので、たまにお話できます。
@cola119 01:39
担当プロジェクトは全然別ですけど、
@g4rds 01:42
ちょっと違うんですけれど、お隣さんな感じで。そうですね、いつもお世話になってます。はい、 ということで、今回ご出演いただいた上野さんが、えっとー、先月の8月ですね。 8月に、Node.jsのコアコラボレーターになられたということで、あ、まずはおめでとうございます
@cola119 02:06
あ、ありがとうございます。
@g4rds 02:08
なんか、コアコラボレーターって、そもそもどういうものなのか、ちょっと いまいち、僕、理解ちゃんとできてないんで、なんですが、なんかどんな感じのものなんですかね。
@cola119 02:22
そうですね。ま、Node.jsの組織構造みたいなものから話すとわかりやすいかなと思うんですけど、
@cola119 02:30
一応Node.jsのまあ、構造としては、我々、開発者であるNode.jsユーザーがいて、
@g4rds 02:39
はい
@cola119 02:40
でNode.jsを開発している、メンテナがいると思うんですけど、で、そのメンテナの中にいくつか、 役割と言いますか、いくつか肩書きがあって、その中の1つの役職として、コアコラボレーターがあるみたいな形になってます。
@cola119 02:55
で、コアコラボレーターの役割としては、皆さんが多分想像するようなOSSのメンテナと全く同じで、Pull Requestのレビューだったりとか、Issueのトリアージだったり、 あとは、あのリリース作業だったりとか、そういったNode.jsを開発して、世の中に出していく一連の
@cola119 03:18
フローの全ての権限を持ってる人みたいな感じで思ってもらえるといいのかなと思います。
@g4rds 03:26
おお、すごいマジですごいですね、Node.jsがめちゃめちゃでかい規模
@cola119 03:32
そうですね、Node.jsの中の人だと思ってもらえばいいんですけど、ま、えっと、この前ちょっと前数えたんですけど、Node.jsのそのコラボレーターとして活動してる人は、
@g4rds 03:46
はい
@cola119 03:47
98人ぐらいいるのかな
@g4rds 03:50
あ、そう、そんないるんですか。
@cola119 03:52
もうかなり。98人はこの1年半アクティブに活動してる人で、 あの1年半全く活動しないとあの、なんていうんだろ。ま、除名ではないですけど、その一旦その休会みたいな形で、一旦その権限は解除されてしまうんですけど、ま、そういう人も含めたら、全然100人以上はいると思います。
@g4rds 04:14
いや、なんか予想以上にでかい、なんというか、組織なんですね、
@cola119 04:20
そうですね。
@g4rds 04:21
100人もなんかあれですかね、常に積極的に活動してるみたいな状況なんですかね。
@cola119 04:29
そうですね、まあ、Node.jsと言っても、あの、多分1番最初に想像するNode.jsのJavaScriptランタイムだけじゃなくて、結構あのCIをかなり専門的に得意としてる人だったりとか。あと、ビルド周りも結構専門的な部分なので、ビルド周りでかなり活躍してくれてる方とか、あとはそのドキュメントチームとか。
@g4rds 04:55
あー
@cola119 04:57
あと、まあ最近だとundiciっていう。あの、fetch APIの内部で使われてるクライアントとか、色々、Node.jsと一括りに言っても、いろんな活動する場所があるので、
@g4rds 05:13
はい。
@cola119 05:13
そういうのひっくるめたら全然98人っていうのは、多く聞こえますけど、確かにそれぐらい人がいないと、成り立ってないプロジェクトなのかなとも思いますね。
@g4rds 05:23
なるほどですね。ちなみに、上野さんはなんかメインでご担当されているところみたいなのってあるんですか？
@cola119 05:32
そうですね。ま、基本的にそれぞれ各々の興味で色々担当できるんですけど、ま、僕はNode.jsのコアの部分と、たまにというか、割とこのundiciも興味があるので、まあ見て、Issueのトリアージとかもたまにやったりしています。
@g4rds 05:50
いいですね、じゃあもうここの箇所担当みたいな、そんな感じではなくて、自由にできるみたいな感じなんですかね。
@cola119 05:59
そうですね、ま、Node.jsっていうOrganizationの中のメンバーになれるので、ま、その中でさらにいろんなチームがあって、 もうAPI単位でチームが分かれてたりしてて、Node.jsのnode/streamチームとか、node/inspectorチームとか、node/loaderチームとか色々分かれてて、それ、そのチーム好きに選んで入れるので、割と自分の興味がある分野で活躍するっていうのは、
@cola119 06:28
色々自由にできるようになってます。
@g4rds 06:31
いいですね、なんか、それはめちゃめちゃ面白そうですね、なんか、ちょっとコアのところ疲れてきたなみたいになったら、こうundiciって最近出てきたコアライブラリーみたいな感じの認識なんですけれど、そんな感じですよね？
@cola119 06:49
そうですね、Node.js本体にfetch APIが入ったのが結構最近なので。日の目を浴びたのは結構最近だと思います。
@g4rds 06:59
あ、そもそも今までってfetchライブラリーみたいなのって、コアに入ってない。
@cola119 07:05
あ、はい入ってなくて
@g4rds 07:07
なるほど
@cola119 07:08
ま、node-fetchっていう、サードパーティーのパッケージとかがあったりしてたんですけど、
@g4rds 07:13
あ、確かに
@cola119 07:15
Node.jsのこの方針として、そのウェブとの互換性を持たせようみたいな流れの1つとして、 あのコアにfetch APIを生やすみたいなものみたいな流れがありました。
@g4rds 07:30
undici最近も話題になったので、結構興味があります。面白そうで、
@cola119 07:37
undiciはかなりあのIssueが溜まってるというか、あんまりアクティブに開発してる人が、どうしても少なくなってしまってるので、 結構Good First Issueとかも溜まってるので、割とかなんかちょっと興味があれば、コントリビュートしてみようみたいな人にとっては、結構ハードルが低いプロジェクトなのかなと思ってます。
@g4rds 07:59
ありがとうございます。なるほど、結構じゃあ、Node.jsのいろんなライブラリーとかを管理開発する人みたいなの感じの位置付けなんですかね。
@cola119 08:11
そうですね、
@g4rds 08:12
ちなみに、コアコラボレーターに推進するみたいな、推進されたみたいな感じの状況でしたよね、
@cola119 08:22
推薦された。はい、そうです、
@g4rds 08:25
あれですよね、今までじゃあ、Node.jsに結構コミットししていて、 そこで結構その功績が認められて、既にコアコラボレーターの人から推薦されたみたいな感じの流れなんですかね？
@cola119 08:42
そうですね。まあ、細かく言うと、さっき言ったように、Node.jsのメンテナの中には、いくつか役割が、役割というか役職っていうのかな、があって、コアコラボレーターが1つあって、でその上というか、さらにそのコアコラボレーターを取りまとめたりだったりとか、最終的な意思決定をする、あの、Technical Steering Committeeっていうチームもあるんですね。TSCって呼んでるんですけど、
@cola119 09:09
ここは本当に10人とか、20人いないぐらいのメンバーで構成されてるんですけど、割とアクティブにコントリビュートしてくれてる人を見つけるというか、人に対して、この人は、コアコラボレーターになってくれたら、さらにもっとNode.jsに貢献してくれるだろうというふうに、そのTSCのメンバーが思ってくれると、じゃあ、この人をコアコラボレーターに昇格させてあげようみたいな
@cola119 09:39
意思決定がなされるっていう感じですね。
@g4rds 09:43
すごい、すごいですね、結構このTSCって書いてあるセクションの中にもかなり、それだけでも、結構人数が多い感じなんですよね。あ、これってなんかこのTSCっていう役職 だと、定期的なミーティングとかがあるみたいな感じなんですか？
@cola119 10:05
はい、そうですね、ま、なんか結構Issueとかで議論が分散してしまったりして、、平行線って決まらなかったりだとか、
@g4rds 10:13
はいはい
@cola119 10:15
だったのは結構TSCで、まあ今オンラインですけど、会議して、最終的な意思決定をするのが多いですね。会議の様子もYouTubeチャンネルで、
@cola119 10:30
Node.jsのYouTubeチャンネルがあるので、そこで全ての会議はそこでライブストリーミングされて、
@g4rds 10:38
あ、ほんとですね。
@g4rds 10:42
Node.js Technical Steering
@g4rds 10:47
おお、え、しかもなんか結構の頻度で配信
@cola119 10:51
そうですね、
@g4rds 10:53
2日に1回くらいの頻度で配信してますね。
@cola119 10:56
ま、いろんなチームが会議してる様子を配信してます。
@g4rds 11:02
結構じゃあ、ここを観たらどんな感じでNode.js運営が進められてるのかみたいなの、
@cola119 11:08
うん、かなり勉強になりますね。僕もたまに見てるんですけど、ま、なんかNode.jsに限らず、ま、こういう大きな組織で、 意思決定を下す流れとか、ディスカッションのやり方みたいなのは、かなり勉強になりますね。
@g4rds 11:25
こんなでかかったら、意思決定とるのほんとに難しそう。
@cola119 11:30
そうですね、
@g4rds 11:31
なんとなく理解できました、ありがとうございます。
@g4rds 11:37
コアコラボレーターの上野さんにちょっと聞いてみたいんですけれど、あの、OSSがどうやって成り立ってるのか、ちょっと僕いまいち理解できていなくて、コラボレーターになると、なんかお金とかそういう報酬みたいなのってもらえたりするんですかね。
@cola119 11:59
えー、ま、もらえるOSSもあると思うんですけど、Node.jsは、そういう稼働に対する金銭的な対価は、 僕の知る範囲ではないですね。ま、だから、それ各々のボランティアという言い方が正しいかわからないですけど、ま、そういう使命感とかでやっていたりだとか。ま、あとは、その、企業には属しているけど、
@cola119 12:23
その企業でのフルタイム、仕事内容は、Node.jsの開発みたいな 人もいてま。それこそ、TSCメンバーのRedHatかな。RedHatに所属してる方とかは、フルタイムで。
@cola119 12:38
Node.jsの仕事をして、で、RedHatからお金をもらってる
@cola119 12:43
みたいな活動してる人もいますね。フリーランスで活動して、空いた時間でNode.jsやってるよみたいな人もいます。
@g4rds 12:51
はいはいはいはい。上野さんの場合は、どの時間にこういうのってやられるんですか？
@cola119 12:59
僕は結構まあ、業務と関係ないことが多いので、プライベートな時間にバグ見つけて、バグ原因調査して、修正みたいなのはやってました。ただ、とはいえ、そのLINEが裁量労働制を採用してくれているので、
@cola119 13:16
ま、結構その日中の間とかも、まあ、必ずしも業務とは関係ないことでも、裁量労働ということでやってもよかったので、業務中もたまにIssue見たりとかはしてます。
@cola119 13:28
あとはえっと、LIFFの話に繋がってくるんですけど、
@g4rds 13:32
はい
@cola119 13:33
LIFFのデバッグツールを開発するときに、
@g4rds 13:37
はいはいはい。
@cola119 13:38
LIFF Inspectorって呼んでるんですけど、あのー、それの実装の参考として、Node.jsのnode-inspectっていうAPIがあるんですけど、そこの内部実装を結構参考にして見てたので、 ま、それは業務の一環として読んでたので、ま、結構その中でバグを見つけて、Pull Requestを送るみたいなこともやってましたね。
@g4rds 14:00
おお、いいですね、なんか、LINEならではですね。裁量労働性だからこそ。ちなみに、Node.js Inspectorって、なんかブラウザ関連とかではなくて、ランタイムのインスペクターみたいな
@cola119 14:17
そうです。node inspect index.jsとかってやると、デバッグモードっていう、ま、デバッガーが立ち上がっていて、Chrome DevToolで、コンソールの出力を見たりとか、ブレックポイント設定したりとか、
@g4rds 14:31
あ、Chrome DevToolで見れる、あ、そうなんですね。あ、じゃあ、まさにLIFF Inspectorと似たような機能を持っている感じ。
@cola119 14:41
あ、ごめんなさい。node inspect index.jsだと、そうですね、Chrome DevToolで、Node.jsのブレイクポイント設定したりとかもできるし、
@g4rds 14:50
おお、
@cola119 14:51
あと、そのぜひあの、ドキュメントを読んでいただきたいんですけど、node-inspectのCLI上でも、ブレイクポイントを設定したりとか。
@g4rds 15:00
え、すごいええ、それめっちゃすごいです
@cola119 15:03
できます。適当にnode inspect index.jsとかってやってもらえれば。
@g4rds 15:12
デバッガー立ち上がり、おお、なんか早速ブレイクしました。
@cola119 15:17
あ、ブレイクしました？ これでchrome://inspectっていうurlを開くと、
@g4rds 15:27
はいはいはい、
@cola119 15:28
このリモートターゲットのところにいます。あ、はい、それをクリックすると、Chrome DevToolsが立ち上がって、ブレイクポイント設定したり、 一行ずつ実行したりとかできるようになってます。
@g4rds 15:47
ええ、知らなかったです。こんな機能が。
@cola119 15:51
そうっすね、結構、通常のWebのデバッグと同じ体験をNode.jsでもできるみたいな形になってます。
@g4rds 16:02
これもLIFF版がちょうど今年でしたよね？
@cola119 16:06
はい、今年の4月、
@g4rds 16:07
あ、4月、今年の4月
@cola119 16:09
に出したLIFF Inspector
@g4rds 16:12
あれ、すごいあれ、すごい便利ですよね。で、やっぱ
@cola119 16:18
うん
@g4rds 16:19
ん、なんか
@g4rds 16:20
ちゃんとデプロイというか、LIFFの、アプリの中でしかちゃんとLIFFブラウザを開いた時にしか発生しないようなバグ踏んだ時にどういう状況なんだろうみたいなのを見る時に、結構今まで大変だったのが、LIFF Inspectorが出ると、もう直接繋げますもんね。
@g4rds 16:42
はい、ありがとうございます。で、もう1点ちょっと僕から上野さんにまたお聞きしたいんですけれど、僕は全然なんかOSS活動みたいなのを今までしてこなかったんですけれど、 上野さん、Node.jsコアコラボレーターになられるほど、OSS活動されているということで、
@g4rds 17:05
なんか最初の1歩ってどんな感じだったんですか？ 僕、結構oss活動って、あ、なんかちょっと大変そうだなとか、 ちょっと難しそうだなって思ってて、ちょっとなかなか生み出せないですけれど、なんかどんな感じだったのか、ちょっと聞いてみたいなと思いました。
@cola119 17:26
ま、僕としてはOSS活動をやっているという意味よりも、ま、なんか 普通に自分が使ってるプロダクトをよくしていきたいっていうモチベーションでコントリビュートしてたので、 ま、そういう意味で、いちNode.jsユーザーとして、Node.jsのバグを直したいだとか、Node.jsをもっといいものにしていきたいみたいな、ま、モチベーションが1つあり
@cola119 17:51
ました。っていうのと、あと、個人的な興味として、あのフロントエンド開発というよりかは、より低レイヤーな、それこそ、ランタイムの仕組みだったりとか、ま、コンパイラーとか、そういうレイヤーの部分にも興味があったので、ま、そういう意味で、Node.jsの中身にも結構昔から興味は
@cola119 18:12
たっていう。まず、それが背景としてありますね
@cola119 18:18
ま、今のがNode.jsに興味を持った背景なんですけど、 でも割とそれはもう本当にエンジニアになった頃からなので、もう3年前とかからは全然興味はあったんですけど、 ま、ただその興味あるだけで、実際にコントリビュートするみたいなのを、まだゆめ夢のまた夢かな、みたいに、僕も思ってた時期はあったんですけど、
@cola119 18:40
ま、ひとつきっかけとしては、ま、なんか本当にコントリビュートすることって、全然あの、難しいことじゃなくて、 皆さんが業務でやってるようなPull Request出すみたいなフローと全く一緒なので、 ま、結構最初の1歩としては、コードをちゃんとローカルにcloneして、手元でビルド走らせてみたいなことをやって、その後は
@cola119 19:05
結構最初はコードリーディング中に見つけたtypoとかを修正して、そのパッチを送るみたいなのを何回かやってましたね。ま、なんかそれでレビュー、まあレビューというレビューはないですけど、それで、ちゃんとApproveをもらえて、マージされるみたいな。一連の流れを何回か経験したので、
@cola119 19:29
ま、そもそもその心理的なハードルみたいなものは、割となくなってきてたと思います。
@g4rds 19:35
おー、最初はそういう軽いところから始めて、流れをまあ、
@cola119 19:42
その通りですね。ドキュメントのtypo修正とかで、ま、それでもかなりコミュニティにとっては、Node.jsにとってはすごくありがたい貢献になるので。 特にドキュメントの、ドキュメントって、どうしてもあの、うん古くなったりとか、typoがそのままになったりとかするので、そこを
@cola119 20:04
ま、いろんな人の目で見てもらって、直してもらえるっていうのは、すごく役立つことなので、なんかtypoを見つけたら、まずなんか臆せずPull Requestを出してみるっていうのは、すごくひとつ、あのOSS活動の立派な活動の1つだと僕は思いますね。
@g4rds 20:22
なるほど
@g4rds 20:23
いいですね、なんかその、OSS活動するぞって意気込むのではなく、自分が使ってるものを良くしたいからっていうモチベーション、まあその、スタンスがやっぱ1番なんていうか、自分の心理的ハードルを下げるし、なんかやってて楽しいなって、今聞いて思いました。
@cola119 20:45
はい、もう本当になんか、あとは、なんかバグを見つけた時に、そのバグ修正パッチを送るまではやらなくても、全然よくて、なんか、そのバグをちゃんとIssueで報告してくれるだけでも、かなりあのコミュニティとしては、 とてもありがたい。それも1つのOSS活動だと僕は思います。
@g4rds 21:05
なるほどです。
@g4rds 21:07
Issue作るくらいだったら、プルリク作るよりも全然。なんか再現、こうしたら再現します、みたいなのをバッとIssueにまとめるみたいなことですよね。
@cola119 21:17
はい、
@g4rds 21:18
うん、うん、いいですね。あー、ちょっとそれ、まずはそういうところからちょっとやってみたい。やってみたいですぜひ
@cola119 21:26
もし、まあ、Node.jsに興味があるんだったら、そういうところから始めると、すごく入りやすいと思います。で、僕の場合はなんかまあそれは結構簡単にできたんですけど、結構そこから先というか、じゃ、そこから先で、なんかバーグ修正したりとか、 リファクタリングしたりとか、機能を実装したりするみたいなフェーズに、なかなかどうしても、そこまではできないなみたいな、風に思ってる時期が
@cola119 21:53
ずっとあったんですけど、ま、なんか、ある日、そのTwitterで、ま、僕がコラボレータになるずっと前からもう1コラボレーターとして活躍されていたまWachi Daijiroさんという方がいらっしゃるんですけど、 その方が、Twitterで、Node.jsに興味があって、コントリビュートしてみたい方がいれば、
@cola119 22:14
あのサポートするので、連絡してください、みたいなツイートをされていたので、まさに僕だなと思ったのでDMして、そこで、その後1時間ぐらい、実際にオンラインで会話して、
@g4rds 22:28
はいはい
@cola119 22:29
ま、実際にそのコアコラボレーターとして活躍されてる方から、こういう活動してった方がいいんじゃないかとか、こういうところから始めると、 次に繋がりやすいみたいな話をしてもらったので、結構それはかなり自分の中でも、1つの大きな役だったなとおもってますね。それがなかったら、全然ここまでコントリビュートはできてなかったので、すごく感謝してます。
@g4rds 22:58
はい、すごいいいですね、そうですよね、最初サポートないと絶対どこも無理、無理ですね、生み出せない。なんかあれですよね、僕はまだ新卒1年目ですけど、1年目、最初の配属の時もそんな感じ。そんな感じだったんで、なんか会社だったらメンターとかいるんで、なんでも聞けるんでいいですけれど、
@cola119 23:27
確かにオンボーディングしてもらえるけど、OSSの場合は、一応ドキュメントはあるんですけど、ね、なかなか、実際にコードを書き換えるところまで、難しいと思うんですけど、そう、結構そことか、僕がコントリビュートしてく中で、最初の1歩として最適なタスクなんだなと思ったこととしては、あの、テストを書く
@cola119 23:50
っていうところがすごく最初の1歩として最適だなと思いました。ま、もちろん、わちさんにも アドバイスいただいて、全く同じことアドバイスいただいたんですけど、はい、あの、Node.jsは、テストのカバレッジを毎日取っていて、それをウェブページで公開してるんですけど、ま、coverage.nodejs.orgっていうURLであれですけど、
@cola119 24:19
これJSカバレッジを見てもらえると、カバレッジが少ない部分、なので、あのテストで網羅できてないところを見つけて、カバレッジを向上させる。だから、そのテストで網羅できてない部分を網羅するようなテストを新しく書いて、Pull Requestを送る。みたいなのは、かなり、なんなら、今でもやってるぐらいの、1つの活動ですね。
@cola119 24:43
ま、これをやるとテスト書くためにAPIにも詳しくなりますし。あのーま、ちゃんと内部のコードを読んで、そこをちゃんと実行して、網羅できるようなテストを書くので、すごく内部実装の勉強にもなるので、 あのすごくいいタスクだなと僕は思いました。
@g4rds 25:02
いいですね、確かにめちゃめちゃ第1歩として最適ですね。知識も深める。実装には影響しないから、まあ、ちょっと結構気軽に
@cola119 25:15
そうなんです。気軽に
@cola119 25:19
まあ、Node.jsかなりテスト充実してるので、96パーセント網羅できてるので、
@cola119 25:30
なんで、なんか機能実装とかしても、テスト全部通ってるから、ま、大体壊れてないでしょ。みたいなのがちゃんと担保できてるので、機能開発も結構やりやすいんですけど、
@cola119 25:41
ま、1つ、これは、もしNode.jsに興味があるんだったら、やってみるとよさそう。
@g4rds 25:46
まずは、typoとか直してみる。プルリクとか、バグIssueを作るとか、そういうところから始めて、 次の1歩はテストを書いてみる、という感じですね。
@cola119 25:59
そうっすね、内部実装に興味があるんだったら、内部を読みつつテストを充実させて、あとは普通に僕の場合はIssueは明後日直せそうなIssueを
@g4rds 26:09
あー、
@cola119 26:10
調査して修正して、Pull Requestを送るみたいなのをやってました。
@g4rds 26:17
なんか結構これどのOSS活動にもいえそうな
@cola119 26:20
あ、そうですね。そうですね、
@g4rds 26:23
このテンプレみたいな流れになりそうですね、僕もこの流れで挑戦してみたい、
@cola119 26:31
本当に、まあなんか自分が業務で使ってるOSSとか、自分がすごく内部に興味があるOSSだと、続けられる、苦なく、続けることができるのかなと思います。
@g4rds 26:46
ありがとうございます、なるほどです。結構僕もこれで今までちょっと、わ、難しそうって思ってたけど、踏み出せそうです。
@cola119 26:56
あ、もう全然、OSS難しそうってみんな、いや僕も思ってたんですけど、全然そんなことはないなっていうのをようやく最近理解しました。 多分、僕、UIT INSIDE初めて出た時も、なんかPrettierにコントリビュートしてみたみたいな回だったと思うんですけど。そこでも同じこと言ってて、あのOSS難しそうだと思ってたけど、やってみたら、そんなことなかったみたいなこと言ってると思うんですけど、ま、本当にその通りで、
@cola119 27:24
普通に自分が普段業務でやってるようなことをOSSに対してやるだけなので、全然臆せず興味があるんだったら、やってみると、 実は大したことないっていうのを気づくと思います。
@g4rds 27:35
すごいな、Prettierも本当リビュートしてたんですね、最初はPrettierだったんですか。
@cola119 27:42
最初、最初がなんだったか全然覚えてないですけど、まだ結構大きめのプロジェクト、パッケージだと、Prettierが最初
@g4rds 27:54
あ、でも結構いろんなライブラリを前からやっていて、Node.js興味が出たから、こっちも挑戦してみるみたいな感じの中で。
@cola119 28:04
そうっすね。結構業務で使ってたやつとかは、バグがあれば、ちゃんと調査し直すみたいな活動やってたんですけど、なんか、Node.jsみたいに継続的にやるみたいなのは、Node.jsで初めてですね。
@g4rds 28:17
ちょっと僕もこういう普段使ってるライブラリで、ちょっと始めてみよう。ちょっとNode.jsはまだちょっと規模でかすぎ。
@cola119 28:28
うん、
@g4rds 28:30
ちょっと挑戦して
@cola119 28:32
本当に自分が業務で使ってて、バグを見つけたら、本当にIssue立てるだけでも、すごく中の人にとっては 役に立つので。本当にそういうところも臆せずやってもらえると、さらによりよいものになっていくと思うし。ま、自分のスキルの向上の1つにもなると思うので、ぜひやってみてほしい。
@g4rds 28:56
ありがとうございます。なんか、すごくめっちゃそれって重要だなって、もう改めて思ったので。 じゃ、それはまず第1歩として踏み出してみようと思います。
@cola119 29:07
はい、もしNode.jsに興味があれば僕に聞いてくれれば。Good First Issueとか、
@g4rds 29:11
ありがとうございます。
@cola119 29:13
サポートはできるので、ぜひ、何かあれば聞いてください
@g4rds 29:19
ありがとうございます。ちょっとぜひ、皆さんも上野さんに興味がある方、ぜひ。ありがとうございます。
@g4rds 29:33
今回は、Node.jsのコアコラボレーターになった上野さんにお話を聞いてまいりました。 LINEのフロントエンド組織UITでは、このような技術的なキャッチアップを日々行っています。 UIT INSIDE以外にも、毎週の社内勉強会で、フロントエンドの情報交換を行っています。
@g4rds 29:52
今後も、UIT INSIDEを通じて、このような情報を外部に発信していけたらと思います。 最後に、現在LINE株式会社では、新卒、中途採用ともに大募集しています。 このポッドキャストを聞いて、LINEに興味を持たれましたら、Shownote一番下にある求人ページにぜひアクセスしてみてください
@g4rds 30:14
それでは上野さん、今日はありがとうございました。
@cola119 30:17
ありがとうございました。