@potato4d 00:08
こんにちは。uitのpotato4dです。ユーザーインターフェイスとテクノロジーを愛する開発者のためのポッドキャストUIT INSIDE、今回もやっていきたいと思います。 今回はNu HTMLチェッカーというHTMLのバリデーターを社員でセルフホスティングした話をしたいと 思っております。今回はですね、webアクセシビリティチームのメンバーたちと、病院インフラチームという社内でのインフラ管理を担当するチームのメンバーたちで構築したので、そのメンバーたちにお話を伺いたいと思っております。今日は3人を招待してるんで、皆様よろしくお願いいたします。
@potato4d 00:44
ではですね、今回のメンバーの自己紹介会からお願いしたいなと思っております。今回、ウェブアクセシビリティチームの2名とインフラチームの1名がいるんで、先2人いるアクセシビリティチームの方から行きましょうかね。 じゃあ、宇賀さんからお願いしてもいいですか。
@hiroya_UGA 00:57
はい、宇賀景哉と申します。現在は出前館に出向してコンシューマ向けのウェブアプリケーションの開発に携わっていて、で兼務でウェブアクセシビリティチームに在籍している感じになってます。
@potato4d 01:09
よろしくお願いします。よろしくお願いいたします。では、同じくアクセシビリティチーム兼任しているけしさんもお願いします。
@Pittan 01:16
はい。慶島亜門と申しますと、僕はホームでLINEギフトのフロントエンド開発を担当していて、兼務でwebアクセシビリティチームに所属しています。
@potato4d 01:26
よろしくお願いします。ます。では最後、居石さんもお願いいたします。
@vivil 01:30
居石弘樹と申します。私は社外アンケートプラットフォームチームでげんじゃ現在リーダーしておりまして、兼務でフロントの組織向けのDevOpsチームのインフラチームの兼務で入っております。よろしくお願いします。
@potato4d 01:44
はい、よろしくお願いいたします。今日はこの3名と一緒にやっていきたいと思っております。 では、早速ですが、今日のタイトルにもなっているこのNu HTMLチェッカーっていうのがどういうものか少しお伺いしたいなと思ってるんですけど。うさん、教えてもらってもいいですか。は、
@hiroya_UGA 01:58
はい。Nu HTMLチェッカーっていうのは元々W3Cがメンテナンスをしているもので、W3CがHTMLをメンテナンスしてる頃から公式のHTMLの文法チェックをすることができるツールになっていて、HTMLだけじゃなくてCSSの文法チェックもできるっていう、そんな優れ物になっています。 で、現在もHTMLの最新のバージョン、リビングスタンダードを管理してるのはWHATWGなんですけど、それのリビングスタンダードでも正式なHTMLバリデーターとして使われているものがNu HTMLチェッカーになります。
@potato4d 02:31
ほう、なるほど。あれなんですね、もうW3CからWHATWGに移っても、まだこれは継続的にメンテナンスされていて、要は最新のHTMLのスタンダードに追従するようなバリデーションが行えるって感じなんですね。そう
@hiroya_UGA 02:44
ですね。
@potato4d 02:45
これはあれなんですかね、CSSも対応してるみたいな形ですけど、CSSの方も最新の標準に準拠したやつで確認できたりするっていう風な ところですかね。
@hiroya_UGA 02:55
そうですね。オプションがあって、ソースを入力して検査する状態だと、CSSっていうチェックボックスが出るので、そこにチェックを入れるとCSSの文法チェックができるようにな
@potato4d 03:07
お。なるほど。なんかまとめてやれる上に、結構柔軟にチェックできて、めっちゃいい感じですね。うんうんうん。これって、今ってオンラインで実際試すこともできたりするんですか。
@hiroya_UGA 03:16
できますね。なるほどなるほど。1番簡単なのはやっぱソース入力で、ソースっていうチェックボックスが1番最初上の方に出てる ですけど、それにチェックを入れると仮のHTML、仮仮のマークアップが出てくるので、そこに適当になんか好きなコードスニペットを入力して チェックボタンを押すと、そのマークアップがバリッドかどうかっていうのが出てきま。
@potato4d 03:37
なるほどなるほど。じゃあ今手元であるコードとかを一旦貼り付けてみたりとか、適当にその場で検証したいコードを変えてバリデーションするっていうのも可能っていう風な感じですかね。
@hiroya_UGA 03:46
そうですね。ごめんなさい、ソースじゃなくてプルダウンのテキストインプットでした。
@potato4d 03:52
これ、テキストインプットだけじゃなくて、あれなんですね、アドレスとかもあって、これはあれなんですかね、URL貼ったらそのまま見てもらえるって感じなんですか。
@hiroya_UGA 03:59
そうです。クローリングしてくれます。
@potato4d 04:01
なるほど。じゃあ結構あれですね。わざわざこう、HTML出力してコピーみたいなのをしなくても、どこかしらにホスティングされていれば、それがバリッドかどうかっていうのはすぐに判断できるっていう風なところですね。
@hiroya_UGA 04:12
はい、そうですね。うん。あと結構これ使われてる技術がレガシーというかミレニアムの時代からあるので、普通にフォームで送信すると、HTTP通信で送信するとソースを受け取ってくれるので、ブックマークレットとかを作って今見てるHTMLをぶん投げればそれの検証もできたりする。
@potato4d 04:31
なるほどなるほど。それめっちゃ楽ですね。なんか使う側としては伝統的な感じが逆にめちゃくちゃUXに貢献してるって感じなん。そうね。
@hiroya_UGA 04:40
複雑じゃないから使いやすいというところがありますね。
@potato4d 04:43
めっちゃいいですね。 これ。今W3Cのorgでホスティングされてると思うんで、もし気になる方がいたらですね、今このエピソードき聞きながらちょっと使ってみてもらえればなと思います。自分が開発してるサイトとかでもいいと思いますし、今さんにご紹介いただいたテキストインプットで ちょっと触ってみるってのもいいと思うんで、ぜひぜひ聞きながら使ってみてもらえればと思います。
@potato4d 05:04
ではですね、追加でちょっとお聞きしたいことがあってですね、これ、今このオンラインのW3C orgで触れるものがすでにあると思うんですけど、これ、社内でこう 構築するようになった経緯って、このアドレスとかがインターナルなネットワークに繋げないからとか、そういう感じなんですかね。
@hiroya_UGA 05:21
それもあるんですけど、やっぱりこれ、バリデーション自体がサーバーサイドで動いているので、まだ未公表の情報を外部サーバーに送信するのはどうなんだみたいな、そういう視点から、内部にこのバリデータが立っていた方が便利だなということで、社内に構築したいという意見を言ってみた感じですね。
@potato4d 05:40
なるほど。これ、バックエンドがしっかりあってっていう風な感じのプロダクト、そっちでバリデーションしてるっていう風な感じなんですね。そうですねなるほど。 だからこう、社外秘みたいなところをちゃんと安全に扱いながらバリデーションを行いたいってのがモチベーション。そうですそうです。ところですね、元々あれなんですかね、社内でNu HTMLチェッカー使おうと思ってたら、特定のプロダクトで使おうと思ってたみたいなのが発端なんですか。これはや、
@hiroya_UGA 06:01
なんかこれまでの経験上、HTML書いてあるNu Validatorに通すっていうのが基本というか、僕の中で当たり前であって、社内にあるだろうって思っていたらなかったから、じゃあ作らなきゃって思って。
@potato4d 06:14
なるほどなるほど。結構こう日常的にやってたのがやってたし、社内に立ってるだろうと思ったら立ってなかったんで、じゃあ作るかみたいな感じ。そうですそうですね。なるほどなるほど。 ありがとうございます。これ、あれなんですね。オープンソースで公開されていて、誰でも立てられるって感じなんですね。立てるの自体。そうですね、はい。 じゃあこれまではあれなんですね、あんまり社外秘じゃなくて、また単純なマークアップとかの確認の時はオンライン版使ってて、じゃあ社内でちゃんとこう使うからには立てていくかみたいな感じに思い立ったっていう風な流れですかね。
@hiroya_UGA 06:43
そうですね。あと、やっぱり社内の内部のプロダクトって、そのままHTML書くケースって少ないと思ってて、ReactとかVueとかを使うと思うんですけど、そうなってくると、そのコンポーネント単位はidとかで、このHTMLが正しいかどうかっていう推測はリンターとかでできると思うんですけど、最終的に出力ってエディタの中では検知ができないじゃない。
@potato4d 07:04
そうですね。
@hiroya_UGA 07:05
それを確かめたいという意味でも、ちょっとNu Validatorを社内に建てたいっていうモチベーションが。
@potato4d 07:10
なるほどなるほど。確かにこう、完成品がHTMLと出力されている状態からのバリデーションした方が精度も高いですし、実態に沿ってるっていう風なところですね。
@hiroya_UGA 07:20
そうですね。あと、アクセシビリティがNGになるケースの1番多いのって、HTMLがちゃんとしてないことにあると思っていて。HTMLを検査できる、気軽にちゃんと完成版のHTMLが検査できる環境を用意しないと、エンジニア視点でアクセシブルかどうかっていうのを簡単にチェックする第1段階のHTMLのチェックっていうのが 難しいのは結構やばいなと思ってね。バリデータが欲しくなるっていうのも。あ、
@potato4d 07:44
じゃあ私もなんかちょっと恥ずかしながら、今回のエピソードの収録で、初めてこのNu HTMLチェッカーっていうの、
@potato4d 07:55
あんまりこう、HTMLを日常的にバリデーションするっていう意識がない気がするんで、なんかそこがあれですね、社内システムとしてコモディティ化しているというか、誰でも簡単に使えるようになっていると、意識が芽生えやすくなりますし、簡単にもう完成品のアウトプットを投げられるってなると、こう、そこにが日常的なものになっていきそうで、めっちゃいいですね。
@potato4d 08:15
では、ちょっとそんな実際のセルフホスティングの、セルフホスティングまでにやったこととかあったらお伺いしたいなと思うんですけど。なんかこの辺の経緯は宇賀さんと慶島さんのお2人が結構詳しいらしいんで、お話聞いていきたいなと思ってるんですけど、けいしさん、ざっくり経緯を教えてもらってもいいですか。
@Pittan 08:30
構築するようになった経緯というのは、宇賀さんがまずSlackでこういうのが欲しいんだけどっていう風に言い始めたのがきっかけで、そこから僕と宇賀さんと、あとインフラ担当の居石さん3人、元々LINEというちの子会社の仲間だったので、そこで立てていきましょうという話 から進行したのがきっかけです。社内にやっぱりサービスを立てる上ではセキュリティとか
@Pittan 08:54
のチェックを通さないといけないというところで、一旦立てた上で、リスクアセスメントと呼ばれる社内の セキュリティチェックをかけてみたんですが、そこで任意のURLに対してアクセスリクエストを投げられてしまうというところがよくないよねっていうところで指摘をいただきまして、一旦話がちょっと止まってしまっていたっていうのがあります。多分半年ぐらい止まってたんじゃないかなと思うんですけど。で、そこから、半分忘れかけていたところに、社外の方の、GitHubの方のリポジトリの方に、宇賀さんが、
@Pittan 09:23
その任意のURLを投げられなくするオプションていうのをプルリクエスト出していただいて、で、それがマージされたので、これなら社内でももう1回立て直すことを検討してもいいんじゃないかというところで検討して、で、うまく今立っているという状態
@potato4d 09:37
で、なるほどなるほど、さっきのあれですね、アドレスベースで動かせるみたいな機能があるって話をしてたんと思うんですけど、それが社内で立てるにはちょっと自由すぎるみたいな感じですかね。 そうですねそうですね。それをより安全に倒せる側のオプションを実際プルリクエスト投げてやっていたって感じですね。
@Pittan 09:53
うんうん。サーバーを起動するときにこのオプションをつけてあげることで、プルダウンメニューからアドレスでチェックするのオプション自体が消えるというものになってます。なるほどなるほど。
@potato4d 10:03
であれば、システム的にそもそもできないから問題がなくなるっていう風な感じですね。はい、ありざいます。無理やり
@hiroya_UGA 10:09
に投げても弾かれるようになって。
@potato4d 10:11
おお。じゃあちゃんと悪用というか意図しない利用っていうのは防いでるって感じ
@Pittan 10:16
なんですね。うんうん、さっき言ったブックマークレットで内容としても大丈夫ってことですね。そうですそうです。
@potato4d 10:21
それはめっちゃ安全でいいですね。ちなみに、なんかさっきお話聞いてる限りだと、かっちりとバックエンドがあって、そっちにメインロジックがあるみたいな形かだったかなと思うんですけど、このバリデータは、じゃあ、サーバーサイドのコードを修正して直したみたいな感じなんですかね。
@hiroya_UGA 10:34
そうですね。なんかPythonとJavaの2つのコードを書いたんですけど、なんか、オプションを受け取ってJavaに投げる部分と、実際に受け取って弾く部分みたいなのを確か修正した気がします。なんかもうJava書いたことなかったんで、もうわ、わかんないなりに見よう見真似でなんとかかんとか書いて頑張り、ま、
@potato4d 10:55
でも結果的にはスムーズにマージされていい感じだって感じですかね。そうですね。 いや、いいですね。なんか普段だと我々フロントエンドの技術を使うのがほとんどですけど、なんかこういうOSSとかの貢献を通じていろんな言語を触れるっていうのも、なんかちょっとたまには気分転換っていう意味でも、知識の引き出し増やす意味でもいいですよね。
@hiroya_UGA 11:13
そうですね。
@potato4d 11:14
でもなんかあれですね、プルリクエスト立てようっていうの、めっちゃアグレッシブでめっちゃいいですね。なんかあれなんですか、意外とコード見てたらコンプリートできそうって思ったみたいな感じなんですか。
@hiroya_UGA 11:25
それもあるんですけど、なんかこれを、プルリクを立てた当時、2023年の9月ぐらいは、なんかすごいOSSに対してモチベーションが高くて、なるほど、そういえばこれ止まってたし、1回やってみるかと思ってやってみたか。
@potato4d 11:39
なるほど、じゃあちょうどこうな、
@hiroya_UGA 11:41
こんな謎に熱が入って、
@potato4d 11:43
いやめっちゃいいですね。ちょうどこうOSS熱が高いタイミングと、こう、課題がそのまま放置されていたっていうのが噛み合って、じゃあやるかって感じなんですね。そうですそうです。実際これってやってみたらサクッとできたみたいな感じなんですか。
@hiroya_UGA 11:56
ああ、もう覚えてないですけど、割と。割と自分の感覚だとサクッとできた方ではあるかなと思いますね。うんうん、
@potato4d 12:06
確かにこれ見てたらあれですよね、プルリク出てからはマージされて、マージされるまでも即日マージされてますし、なんかいい感じに進んだっていうのが見て取れて面白いですね。せっかくなんでショーノートにURLも貼っとくんで、皆さんもプロジェクトか 見てもらえると、あそこからバリデータのコードも見れると思うんで、ぜひぜひご覧いただければと
@potato4d 12:24
思います。で、この諸問題が解消されて、実際のホスティングに移っていったっていう風な感じですかね。はい、そうですな。ホスティング周りはあれですかね、居石さんが担当したみたいな。はい、そうですね。 なんか我々の組織だとNode.jsとかパース的に動かせる基盤とかあるかなと思うんですけど、今回このPythonとJavaていう感じだと思うんで、どういう感じにも実際セルホスティングを進めていったんです。
@vivil 12:45
はい。依頼を受けて色々技術的な 面で検討したんですけれども、弊社、我々がフロントエンドで普段使っているサービスとは別のところで、フルマネージドのコンテナアプリケーションサービス、AWSのApp Runnerですかね、そのようなサービスが社内にもあるんですけれども、そちらでサービスを立てられないかなというのをまず第一候補として検討しました。
@vivil 13:06
ただ、Nu HTMLバリデータが、HTMLの1と2を両方とも受け付けるっていう仕様があるんですけれども、その仕様が社内のそのツールとコンテナアプリケーションサービスと相性が良くなくて うまく動かない。具体的に言うと、大きなサイズのHTMLがベースとされて実行されてしまうとレスポンスを返せないっていう問題を発見しまして、社内のインフラのチームにも問い合わせをしたんですけれども、の修正は難しいというお返事だったので、それを受けてまた
@vivil 13:35
別の技術スタックでやろうっていう形になって、最終的にはインフラチームが独自で サービスをホスティングするような環境を準備して、そちらで動かせるように準備をした形になります。
@potato4d 13:47
それはあれですか、なんかIaaS基盤みたいな感じなのか、専用のDockerイメージみたいなの作って、結構PythonとJavaてなるとこう、既存のビルドパック的なイメージだとこう作れないかって感じになるかなと思うんですけど、どんな構成にして進めてい
@vivil 14:01
そうですね。これに関しては慶島さんと分担しまして、PythonのコードのDockerイメージの作成をお願いして、社内のDockerレジストリにプッシュしていただいて、この補修されたイメージを我々の方でホスティングするという流れで役割を分担しています。
@potato4d 14:15
最終的にはコンテナベースで動いてるっていう風な感じなんです。そうです。
@Pittan 14:19
元々Nu Validator自体もDockerのイメージが配布されている状態なので、最初から。最初はその上それをそのまま使うという選択でやってました。そうですね。READMEの多分下の方に行くとかなり、下の方に行くとめちゃめちゃ長いです。
@potato4d 14:35
下の方にDockerイメージでの使い方っていうのが書かれていて、これで動かすのもできるっていう風な感じなんですね。
@Pittan 14:40
はい。ただ、うちの場合だと、ここにさらにどれだけのユーザーが社内で使ってくれているのかみたいなのを、ちょっとログをとりたいなというニーズがあったので、これにちょっと改変したものをまたうちの中でDockerイメージにして社内レジストリにあげていると。
@potato4d 14:55
なるほど。じゃあ、このバリデータのイメージをベースにしながら、社内容の調整をちょっと加えて完成のイメージにしたっていう風な感じですね。 なるほどです。てか、これ、あれなんですよね。このまま動かそうと思ったら、Docker外部に公開されてるDockerイメージで、そのままでセルフホスティング自体はやろうと思えば可能なんですよね。
@Pittan 15:13
そうですね。なので、もしご自身の端末とかで、例えば他社の開発者の方が、自分の会社の中の環境でしか見れないページをやりたい、チェックしたいっていう時とかは、このDockerイメージを自分の端末、パソコンで実行してもらえれば、多少安全な環境で実行することができるんじゃないかなという風に。はい
@potato4d 15:30
ですね。しかも今回、宇賀さんがこの貢献したアドレス制限のやつもちゃんとマージされてるんで、オプション付きで動かせば、より安全に動かせるって感じですね。 はい。で、最終的に無事動作して今に至るっていう風な感じですかね。そうですね。ありがとうございます。セルフホスティング、それで無事完了したっていう風な感じなのかなと思うんですけど、一通り終わって動き出したのっていつ頃からなんですかね。
@vivil 15:52
2023年の10月になります。
@potato4d 15:55
おお。なるほどなるほど。であれば、まだ1年経ってはないけど、そろそろ1年近くなっていいかなっていう風なところですね。そうですね。 導入してからそれなりの時間が経ったかなと思うんですけど、実際プロダクトで導入してからこのセルフホスティング版こんな感じで使ってるよみたいな話聞ければなと思うんですけど。特にサービス開発しながらアクセシビリティの活動してるお2人、なんかあったりしますか。
@hiroya_UGA 16:17
普段書いてるHTMLが書き終わって画面ができた時に、一旦それはNuに投げたりしますし、普通にチーム内で雑談で 最近HTMLがアップデートして、こういうことになって、みたいな話をしたりするんですけど、そういうカジュアルの雑談の中で、今こういう風に話したけど、このHTMLっていけてるんだっけ。と思ってちょっと書いてみて、バリデーション通してああよかったよかったいけてたわみたいな確認をしたりしますね。
@potato4d 16:42
なるほど。こう、プロダクトの品質チェックはもちろんですけど、そういう感じで技術トークみたいな時にも使うんですね。 そうですね。確かになんかプレイグラウンド的な環境だったらいくらでも。てかもうもはやHTMLファイル用意して開けたらそれがプレイグラウンドみたいな感じになりますけど、それが正しさのチェックみたいなんてなるとあれですもんね。その、適当な環境だとできないんで。 うんうんうん。しかもいじめる疾患があって
@potato4d 17:05
いい感じですね。それ確認するときはテキストインプットに直接流し込んで試してみるみたいな感じなんですかね。そうですね、そうですね。これはなんかあれですか、新仕様とかもちゃんとアップデートしてるんで、毎回ここでリビングスタンダードに 追従してくれてるんで、ここで確認しながら見れるみたいなんがあって便利みたいなとこですかね。うんうん。
@hiroya_UGA 17:22
うんうん。そうですね。
@potato4d 17:24
なんか他にもさっきからのお話の中で、ブックマークレットとかから叩けるよみたいな話もしてたしてたかなと思うんですけど、そういう使い方も日常的にしてるっていう風な感じなんですかね。
@hiroya_UGA 17:33
そうですね。ローカルで開発すると、やっぱローカルホストで見てることになると思うんですけど、そん時にレンダリングされたCSRの結果を JSで拾って、それをフォーム要素にぶち込んでサブミットしてここに飛ばすっていう、Nu Validatorに飛ばすっていうので、最終的な結果をよく見たりはしますね。
@potato4d 17:52
確かに。実際手元で実行して、ローカルホストでReactなりVueなりで動かして、その結果を投げることによってSPAのバリデーションを素早く完了することができるか。 ちなみに、結構あれなんですか、そのやり方みたいなのはチームメンバーとかにも共有とかしてて、ちょっとずつ最近やってますみたいな感じなんですかね。
@hiroya_UGA 18:12
いや、一応ブックマークレットは共有したんですけど、共有したっていうよりかは雑談ベースでこんなん作って最近使ってるんだよみたいなことを言っただけで、なんか宣伝的な感じにはしてないので、他のメンバーが使ってるかどうかちょっと。わ、
@potato4d 18:26
なるほどなるほど。了解です。ありがとうございます。 ちなみにそのブックマークレットって社内版のURLが指定されてるかなと思うんですけど、なんかせっかくなのでこれ聞いてる人向けにW3C org版のブックマークレットのコードとか 共有してもらったりとかできます。
@hiroya_UGA 18:42
あ、それは多分検索すると世の中にたくさんある気がしていて。なるほど。あ、有名どころで言うと、フィーさんがブックマークレット共有していると思いますね。
@potato4d 18:53
おー、なるほど。であれば、フィーさんのブックマークレットのURL、ショーノートに掲載しておこうかなと思うんで、もし実際ちょっと試してみたいって方が いらっしゃれば、そちらご覧いただければなと思います。
@hiroya_UGA 19:04
実際、僕もこちらを改造させていただきました。
@potato4d 19:07
ありがとうございます。っていう風な感じですね。
@hiroya_UGA 19:10
うん、そうですね。ありがとうございます。
@potato4d 19:12
けいしさんの方は、なんかこんな感じで使ってますみたいなのはあったりしますか。
@Pittan 19:15
はい。ちょっと僕、お恥ずかしながらあまりちょっとこれ立てたんですけど、活用しきれていなくてですね、今聞いた宇賀さんの話を元に、これからのプロダクト開発にどんどん役立てていきたいなという風に思ってます。特にそのフォームに全部ばって貼って送るっていうところにちょっと億劫さを感じていたので、ブックマークレットはめちゃめちゃ便利でいいなという風に思ってます。
@potato4d 19:36
確かになんかあれですね、毎回送るってなるとちょっと一手間二手間かかるなって感じなんで、もうブックマークレットでシュッと送れるなら便利ですよね。
@Pittan 19:44
ブックマークバーにぜひ置いておきたいなという風に思います。私も
@potato4d 19:47
この収録が終わったらすぐに追加しておこうかなと思いました。 ではですね、最後にもう1個お聞きしたいのがですね、今こうセルフホスティングして、これまでNu HTMLチェッカーをこう使ってきた人たちが便利に使えるみたいな感じかなと思うんですけど、社内でこういう人とかにもこれから使ってほしいなみたいなのはあったりしますか。
@hiroya_UGA 20:04
やっぱりフロントエンドというか、HTMLが出力される技術を扱う人全てには やっぱNuを触っておいてほしいなと思いますね。ReactでもVueでもAngularでも、それ以外でも、例えばメルマガを作る人でも、HTMLを書くのであれば 必ずNuに通して、それがバリッドかどうかっていうのは見る癖付けはしてほしいなと思いますね。
@potato4d 20:28
であれば、あれですよね、まずは我々の組織で言うと、いわゆるフロントエンドエンジニアっていう人が多いんで、そこに使ってもらって慣れてもらうとかはもちろんですし、なんかメルマガとかかく 人って、企画の人とかもちょっとHTML触ったりとかってあるかなと思うんで、そういう人にもゆくゆくは伝わっていくといいかなっていう風な。 そうところですかね。なんか逆にあれですね、普段HTML触れない人がバリデーションとしながらやれるっていうのは結構な価値になりそうなんで、なんかその、企画者とかに書いてもらうとか、試してもらうとかも、実はめっちゃ効果あったりとかするかもしれないですね。うんうん。うん
@hiroya_UGA 20:59
うんうん。そう思います。
@potato4d 21:00
じゃあ、あれですね、ネクストステップはそうやってより利用者拡大していこうかみたいなとこですね。
@hiroya_UGA 21:06
そうですね。せっかく立てたからにはいっぱいいろんな人に使っていただきたいと思いますので。
@potato4d 21:11
じゃ、私もちゃんと使おうと思います。
@Pittan 21:14
ありがとうございます。あと、2023年10月になったということで、ちょうどLINEとYahooが 合併するそのタイミングというか、そのあたりに立ったので、多分、あまり、LINE、あんまり、Yahooの方々も、Yahooの方々に対しての広告というか宣伝みたいなのがあまりできてなかったのかなっていう風に 思っていて、なんかそういうところももうちょっとちゃんとこれからちゃんとやっていきたいなっていう風に
@potato4d 21:36
思います。こう、せっかく草の根活動的にはじめて、ある程度時間、長い時間メンテナンスしてきたってのもあるんで、これからはより 多くの人に使ってもらえるといいですね。
@Pittan 21:47
よりアクセシブルなプロダクトがいっぱい増えるといいなと思ってます。
@potato4d 21:50
ありがとうございますね。あと、こういう
@vivil 21:52
我々3人から始まったようなプロダクトが、すごいスピードで実際にブログやコミットまでされて、実際に社内で運用されるようになったっていうのはすごいいいことだったなと思っていて。 そういう動きがより動かしやすいように、インフラチーム内でも受け入れをできるような体制を整えることもできましたし、今後こういう形で社内でこういうツールが欲しいであるとか要望があったらすぐに動ける体制作りもできてるかなと思うので、そういうオープンな形で開発がどんどん進められると今後もいいなという風には思っています。
@potato4d 22:21
ありがたい限りですね。我々の中の内部の人間からすると ありがたい限りです。そうですね。ではですね、是非これ、このエピソードを聞いた方々もですね。Nu HTMLチェッカー冒頭でお話した通り、W3C orgから 直接アクセスできるオンライン版も用意されているので、ぜひぜひこの後すぐにでも試していただければと思います。では、クロージング移りたいと思います。
@potato4d 22:45
というわけで、今回はNu HTMLチェッカーのホスティングについて話していきました。このように、LINE Yahoo株式会社では、フロントエンドエンジニアがフロントエンドに関する様々な活動をして おります。これまでUIT INSIDEで出してきた内容もですね。社内での活動であったり、社内ミーティングであったり、外部向けに行っている開発の内容の発表など様々ですので、今後も何かしらトピックがあったらどんどん公開していきたいと 考えております。また、このポッドキャストに関するご意見やご感想はハッシュタグで
@potato4d 23:14
募集しております。ハッシュタグハッシュUITアンダースコアインサイドにてポストいただきますと、スタッフの方で拾わせていただきますので、ぜひぜひ気軽に ポストいただければと思います。ということで、今回はNu HTMLチェッカーについて話していきました。ありがとうございました。
@vivil 23:29
ありがとうございました。ありました。
@Pittan 23:31
ありがとうございました。

