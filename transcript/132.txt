@potato4d 00:04
こんにちは、uitのポテトポーディーです。ユーザーインターフェースと、テクノロジーを愛する。えー、開発者のためのウィープリーポット、キャスト、 uiteサイド、今週も始めていきたいと思います。え、今回はですねえ。フロントndのプロジェクト、jav、スクリクトプロジェクトのえー バージョニングをえー管理できるようなえ、ツールであるチェンジセットについて、えーたさんにお話を聞こうかなと思ってます。えーたま田さんよろしくお願いいたします

@spring_raining 00:31
よろしくお願いします。

@potato4d 00:40
えー、では、早速チェンジ設について話していきたいなと思うんですけど、まずは、チェンジ設がどういうものかっていうのを教えいただいてもよろしいですかね。

@spring_raining 00:48
はい、そうですね、あの、先ほど紹介いただいた通り、えっとまバージョニングツールですね。で ま、バージョニングツール使ったことない方もいるかもしれないんですけども。まあ、要するにこうnpmパブリッシュとか、 あと、gitハブのまリリース作業とかをま、自動でやってくれるツ

@spring_raining 01:08
プラス。えっとま、バージョニングなんで、パッケージのバージョンをま、例えば、1.0.0とかそういった感じで、バージョンニングを上げるのをま、自動でやってくれるツールっていうものになります。
でま、チェンジセットはま、その中でも特徴としては、多分モノレポ向けっていう言われ方がよくされてるのかなと思うので、まあ、モノレま要するに、その ふ複数のま、パッケージを1つのリポジトリでえ、管理するプロジェクトに向いたツールということになります。

@potato4d 01:39
おお、なるほど、なるほど、じゃあ、かなりちゃんとモノリポに特化しているみたいな、あの独特の特徴がある感じなんですね。

@spring_raining 01:46
そうですね、一応あのまああのシングルポジトでも大丈夫とは書いてるんですけど、もまあのし、仕組みが結構のえぽに特化してるっていう感じです。

@potato4d 01:56
ただ、これあれなんですね。あの、リリースnoteを書くっていうよりは、リリースフロー全部を任せられるバージョニング全般、 お任せられるツールっていう風な感じなんですかね。

@spring_raining 02:06
そうですね、はい、役割がまそれぞれのツールによって分かれているんですけれども まチェンジセットの場合、えっと、バージョニングとリリースは一緒にやってくれるツールになりますね。で、後で紹介するんですけれど、もまチェンジログを 書いて、まあリリースをするとま適切なバージョンが選択されて、そのバージョンでファブリッシュされて、あと、チェンジログのマークダウンファイルがま更新されるみたいな

@spring_raining 02:32
ツールがまあそこまで一貫してまやってくれるというツールになります。

@potato4d 02:37
なんか、他のパブリッシュ作業とかって、どういったところまでやってくれるんですかね。

@spring_raining 02:40
ああ、そうですね、パブリッシュは、チェンジセットっていうファイルがありましてま、それをま書くことによってま、制御するんですけど、も、 まあ、のどどこまでと言われるとぜ。全全部全部全部って感じですね。

@potato4d 02:55
結構なんかうちらだと、あのプライベートnpmとか使ってると思うんですけど、そこへのファブリッシュとかもやってくれるみたいな。

@spring_raining 03:01
あ、そうです。そうです、そうですあのー、後であの紹介しようかなと思ってたんですけど、結構競合のツールと比べると、まあ、なんて言うんですか。環境依存が少ないというか、まあ、 割とどの環境でも置くみたいなところも特徴なので、例えば、 そのまツールによると、まgットハブのアクションとか、あと、gットハブのボットとかい、一体化したプロジェクトとか、えーツールとかがあったりするんですけども、

@spring_raining 03:27
これは結構まあ、実態は完全なあのコマンドラインのツールになります。おお、

@potato4d 03:33
かなりじゃあ、現場問わず使えるっていう強みがあってま。一方で、その使いたいやつはちゃんと全部入ってるみたいな

@spring_raining 03:40
そうです。そうです、

@potato4d 03:41
なるほど、ありがとうございます

@potato4d 03:45
えと、そのえーチェンジセットについてなんですけど、そもそもなんかまこういったものって、結構ライブラリを管理するみたいな機会がないと、こう使う機会が出てこないかなと思うんですけど、なんか、どういったモチベーションがあって、導入することになったんですか。

@spring_raining 03:58
あ、そうですね、そ、これを説明した方が良いかもしれないですね。あの、今回作ろうとも たのはえっとまuitイブイなんですね。でま、プロジェクトがおっきなプロジェクトがあってま、その中で共通のコンポメントであったり、ま、uiをこう共通化させる必要がああり ま、その一環で、まあ、cssライブラリーみたいなのよりは、もうちょっとこう豪華なま。例えば、ボタンみたいな汎用のライブラリーは必要だったんですね。

@spring_raining 04:26
でま、それを今回作る必要があったんですけれども、それをま実現するために、まいろんなバージョニングツールを 探していました。でま、具体的な要件としては、結構まモノレポにするっていうのは、まず前提だったんですね。というのも、 あのま、uyのコンポネントライブラリなんで、まあ、

@spring_raining 04:48
全部インストールする必要はなくて、例えば、このuiとこのuiを使いたい場合は、このパッケージをインストールするみたいな。そういった使い方を今回したいなと 思っておりました。で、あとは、コンポーネントをま更新 するタイミングっていうのが、まあ揃えられないっていう事情がありました。ま、要するに、そのあるコンポーネントを

@spring_raining 05:10
作成してま、その中でなんかこう足りない機能がありましたとかで、まあ足りない機能をコンポネントに追加した上で、こうバージョンアップ させたいんですけれども、まあ、そのコンポーネント すでに使ってるプロジェクトがあってま、そのコンポンメントバジョン上げることによって、その機能を追加していない側のプロジェクトで、何か問題が発生するみたいなことも

@spring_raining 05:33
ま予想されるし、ま、そのバージョンを上げることに、それぞれ依存してるプロジェクトを全部 あのリリースしないさなければいけないっていう問題もあったので、要するに。まあ、本当にこうのま。パブリックなnpmパッケージを インストールするかのようなま使い勝手が今回求められたところが

@potato4d 05:53
ありました。じゃ、結構あれですね、こう、社内ツールって、そういったところ、こうなんでしょう。簡易的なものでやりがちですけど、こう本格的な。やはり、体験を提供する必要があったから、 ま、ちょっとツールの方も、できるだけ重効なものを求められていたっていう風なところなんですね。

@spring_raining 06:08
そうです、そうですまあ、あの、そのプロジェクトがま、結構こう。知らない人が触ったりとかっていう状況も降りるような 規模のプロジェクトだったっていうところがありましたね。

@potato4d 06:19
なんか、そんな中でこうチェ理設ツにした決め手みたいなのは、なんかあったりするんですかね。

@spring_raining 06:23
あー、そうですね、そこで言うと、まいろんなプロジェクトを探してみて、1番決め手だったのは、割と 実績があったっていうところが、もしかしたら強いのかもしれないですね。あのー、結構 チャンニセットのリードミーに書いてあるんですけど、もま、例えば、エモーションとか、アストロとか、スベルトキットあたりですね。ま、そういった結構

@spring_raining 06:48
ossのプロジェクトで、実績があったっていうところはま、今回重視したところですね。まあ、結構 あのさっきのお話の内容的に結構ま社内ossと言いますか。
割と誰でもまあ開発に参加するしてま。誰でも使えるようにさせる必要があるっていうところで言うと、やっぱりこうoss的な

@spring_raining 07:11
やり方に寄せていった方が良いのかなと思いま。そういったのを考えてま。チェジセットを選んだという。なるほど、なるほど、

@potato4d 07:20
じゃ結構あのモデルにしているのがossだったんで、ま、そこでの利用実績がこう近いものを 探して、まあ、それだけ大きなossで使われてるんだったら、我々のこういうスケースだと、もちろん十分に目指せるだろうっていう風なところが決め手だったわけですね。

@spring_raining 07:36
そうです、そうですあの、まああの使う前は結構ま心配だったところも結構あって、まあ、単純にギットハブドットコムでしか使われてるのは見たことなかったんで、 社内のgットハブで、そもそも使えるのかとか、やり方が 噛み合うのかどうかみたいな心配はあったんですけど、もま幸い。後からなんか気づいたんですけども、環境に依存しないっていう

@spring_raining 07:58
差があったので、ま、そういった面でも今回良かったなと

@potato4d 08:01
思ってます。なるほど、 確かになんかんghaとかって、あんまりこう。よく使われている環境ではないというか、なんであの、ちょっと心配だったりしますけど、実際ちょっと気があったりとかありますけど、 意外とそんな心配事は何もなくって感じだったんですね。

@spring_raining 08:17
そうです、そうですま、そこは本当に良かったです

@potato4d 08:21
なか。ちなみに、他ツールを探してる時に、結構他のなんか案も出てくるかなと思うんですけど、こう他のバージョニングツールと比較して、 なんかこう。チェンジセッツのこういうところはいいけど、なんか、他こういうとこの魅力があって、他のツール、例えば、こういったツールは検討しましたみたいなのってあったりしますかね。

@spring_raining 08:40
あ、そうですね、ま、チェンジセット結構カバーしてる範囲が広いので、ま、どういっため目線で比べるかっていう ところもあるかなと思うんですけど、ま、2つなんかこう見方があるのかなと思っていて、1つはまあ、単純にその物ノレポ のツールって、まあ、例えばラーナとかもバージョニングツールの機能があるので、ま、それをまなぜ使わなかったのかっていう点と、

@spring_raining 09:06
ま、あとま純粋に、まあ、モノエポじゃないリリースツールと比べてどうだったかっていうところで、まあ 2つ観点があるのかなと 思ってまして。えーっと、1つ目のモノレポ向けのバージョニングツールとして見ると、結構まチェーンジセットって繰り返しになっちゃうんですけど、依存があんまりないっていうところが

@spring_raining 09:28
決めてだったのかもしれないですね。ま、モノレポって結構あんまり選択肢ないようで、意外とあって、nxとか、 あー、アーボレポとか、イヤンワークスペースとか、結構色々バラバラだったとすると思うんですけども、多分ま、どれでも使えます。じゃあ、ほ、

@potato4d 09:44
本当環境を選ばないって感じなんですね、

@spring_raining 09:46
そうです、そうですま、そのプロジェクトの構成とかもあれですね、勝手にあの探してきてくれますね、チェーンズセットがで

@potato4d 09:53
おおすごいです

@spring_raining 09:54
ね。それはそうそう、そうす、あの、本当になんかパッケージジェーションがあるところを探して、で、チェンジセットっていうファイルに、そのチェンジログを書いていくんですけれども、 まそこにそのまリリースしたいパッケージ名を書くみたいなことをやるんですね。で、そこのファイルだけがま情報になるので、 あんまりそのモレポの他の機能とかもプリクトするみたいなことはなさそうっていうところはあります。

@potato4d 10:21
カバー範囲が広いけれども、まあ、結構その他のツールとは喧嘩しないようにに作られてるそうです。そうです

@spring_raining 10:27
あー、あと一点まあるとすると、まチェンジセットの仕組み上、結構他のもの、レポだと、そのパッケージ全体でバージョンを揃えるっていう機能が あったりするんですけれども、チェンジセットはあれですね。パッケージがけど、独立してバージョン上げる 前提の実装になってるので、ま、そこはあの気を付けないといけないですね。つまり、あのラーナのインデペンデントモード

@spring_raining 10:53
である。あると思うんですけど、もま、それがま有効になった状態っていうのがま、デフォルトっていう感じになります。

@potato4d 11:00
あの、逆にあれですよね、こう あの、独立してる方がそれぞれ個別でバージョンあげやすいんで、まあ、まとまってる方が、全部のバージョン番号合わせるときは、合わせやすいみたいな利点ももちろんありますけど、 こう別れて方が柔軟には設定しやすいですし、そうそうなんかこう利点でもあり、欠点でもあるっていうか、なんかこう使う人次第な感じはそこはありそうですね。

@spring_raining 11:18
そうですよね、あの、結構これはプロジェクトの性質次第っていうところですね。ですね、 で、えっとままもう1つのまリリースツール として考えると、これも思想が分かれるところでして。例えば、セマンティックリリースとか、リリースiトとか。

@spring_raining 11:38
なんかコンビニ、ソナルチェンジログとかいっぱいあって、 結構まそれぞれのプロジェクトで、別々のものを使ってる感じかなと思うんです。けれども、チェンジセットの1番特徴的なのは、チェンジせ っていうプロジェクト名で、チェンジセットというファイルがえっとあります。で、チェンジセットっていうファイルに

@spring_raining 11:57
全てそのま情報を書き込んでいくっていうのがま、チェンジ設ッのやり方ですね。で ま、具体的にどうやるかっていうとま、チェンジセッツのプロジェクトを見ると、あのドットチェンジセットっていうデクトリがえっと あります。で、ま、その中にま状況によると思うんですけれども、まいくつかmarkdownファイルが

@spring_raining 12:18
入ってたり、入ってなかったりします。で、ま、そのmrkdownファイルっていうのは、こう自動的に作られるもので、ま、自動的に 作られたマークdウnファイルに今回変更したい機能とかま、チェンジログをそこに書いて、あいくっていうフローを取ります。
で、ライブライによるんですけども、チェンジセットの場合は主動でリリースします。で、チェンジセット、パブリッシュっていうコマンドがあって、それを実行すると、ドットチェンジセットの中にある。えっと、マークダファイルを元にしてまバージョン

@spring_raining 12:51
を上げたり、チェンジログを書いたりっていう感じで動くっていう流れになっています。で、これ結構 他のリリースツールと全然違うので、割と特殊っぽい感じはするんですけども、結構これは うまく動いてるなっていうところは、今のところの印象ですね。で、多分1番周派が分かれそうなのはセマンティックリリース、

@spring_raining 13:15
いわゆるあのあれですね。コミットメッセージから、チェンジログを書くやつですね。あれとは全然やり方が違うので、まあ、好みっちゃ好みなんですけれども、あんまり 個人的にそのコミット単位で、そのリリースのチェンジログに書くような機能を書くことって、そんなに ないんじゃないかなっていう。まあ、あの綺麗にこうコミットしていければできるんですけれど、も、まプロジェクトによってはこうなんて言うんですかね。こう、

@spring_raining 13:41
色々こう試してみてやるみたいな感じにあると思うんで、そういったなんか、こう試しのコミッとか全部あの、なんて読むんですかね。ちょわ、

@potato4d 13:51
はいはいはいはあれですよね。あの、スカッシュマージとかしてなくて、普通のマージしてるプロジェクトになると、結構そのゴミになるようなコミットがたくさん溜まってしまって、こう なんか、なんフィックスみたいなことが書いてあるようなこう、絶対テンポラにな、コミットメッセージがこうリリースノートに入っちゃって、その読む側からしたら何かわからなくて、 でも、なんかとはいえ、こう結構自動生成するやつとかって、コミットハッシュまで一緒に書いてくれるんで、こう邪魔だなと思って消すと、それはそれで追えなくなるみたいなのが結構あって、

@potato4d 14:19
なんか自動生成ゆえの、なんかこう融通の効かなさというか、こう ま情報としてはあるんだけど、読み手側に優しくなってるかっていうと、優しくないってのが結構ありますもんね。ま、

@spring_raining 14:29
まさしく、まさしくそうそうなんですよ。あのー、 チェンジセットのなんか、コンセプトみたいなページがあって、ま。そこに書いてあると、ところで言うと、機能を1つの機能として、まとめるとしたら、 まあ、プルリクエストの単位が多分いいんじゃないかっていうま、提案がしていて、まあ、

@spring_raining 14:49
私も個人的にあの同意見で、そのま。プリリクエストに1つのチェンジログ の項目があるみたいなところが、まあま粒度的にはちょうどいいんじゃないかっていう ところが、セマンティックリリースとの違いになりますね。

@potato4d 15:05
確かに、なんか、プルリケュエストごとって言われると、すごいひっくりくるというか、なんていうか、 実際まとまったコードの量じゃないと、アブルーブがつかないし、マージもされないから、必ず一定の情報量が担保されてる感じはありますね。

@spring_raining 15:17
そうですよね、これは、本当にま好みではあると言われればそこまでなんですけども。まあ、プbリクエスト単位でそういう項目ができるっていうのは、直感的だなという 感想を持ちました。

@potato4d 15:29
いいですね、なんかこうあれですよね、自動生成系でも、もはやプルリクエストベースにしてほしいなって思っちゃいます。

@spring_raining 15:39
まあ、それもできるのかな。いや、でも、セマンティックリリースは少なくとも、なんかコミット単位ですよね。
ま、あと、一応ルールに従わせたい意味で言うと、一応チェンジセットボットっていうのがありましてま、これ、ギットハブドットコム専用だと思うんですけれども、あのま、フルリクエストに対して、チェンジセットっていうファイル単位で リリースを管理するので、まあるプロジェクエストに対して、こうチェンジセットのファイルがなかったら、ま、一応こう注意するみたいなフローを取ることはできます。

@potato4d 16:10
おお、なるほど、そういうちゃんと正しく運用するためのボットみたいなもあるんですね。

@spring_raining 16:17
そうです、そうですま、そのボットとかそういうフローに従っていれば、ま。プルリクエストの単位で、少なくとも、チェンジログが 書くことはできるっていう感じになります。

@potato4d 16:28
いいですね、なんかこう聞いててすごいこう なんでしょう。読み手側と書き手が両方にとって、結構嬉しい形になってるなと思って、すごいいいなと思いました。
なんか、これただ結構そこまで毎回ボットで怒られて、頑張って。チェンジセットの

@potato4d 16:47
ディレクトリ内のファイル書みたいなのって、なんかこう聞く分には結構大変なのかなと思ったりするんですけど、実際やってみるとそうでもないんですかね。

@spring_raining 16:54
そうですね、あの、一応cはあるんですよね、で、あのcliで確かチェンジセットでサブコマンドなしで実行したら、ウィザードみたいなものが

@spring_raining 17:06
てきて、はい、対話型のやつが出てきて、まあ、今回の変更はメジャーですか。マイナーですか、パッチですか。みたいな質問から、ここにメッセージ書いてください。
で、あのエンター押すと、多分その内容に従ったマクダファイルができるっていう感じになってるので、ある程度はカバーしてもらえるところです。

@potato4d 17:25
しかに、なんかそれぐらいだったら、かつプルリクごとに1回ぐらいだったら、そんなにこう大業じゃないんで、なんとか

@spring_raining 17:32
こい

@potato4d 17:33
なりそうですね。そうですね、

@spring_raining 17:34
ファイルベースのいいところは、最悪、そのコミットした人以外がファイル作っちゃってもいいっていうところはあるんで、 一応ま、そういったまでも、多分実装した人が書くのが1番いいです。

@potato4d 17:45
でも、なんかそれこそなんかoss的にこう他の人が追記して助けるみたいなのも一応できる、 できてたらできるって感じですね。そういうことですだ、あれですよね、それこそ、例えばこうプルリック誰かが 送ってきてくれたけど、ま、チェンジセットまで書くのは覚えてもらうのも大変だし、みたいな時にシュットきたすみたいなのやろうと思えばできるみたいな

@spring_raining 18:03
そうです。そうです、それはできま

@potato4d 18:05
あいいですね、じゃ、意外と大変じゃないし、めんどくささみたいなところはそんなに変わらずに、まあ、ちょちょっと多少ステップは増えるとはいえ、できるだけ低コストに こうちゃんとしたチェンジロッグが生まれるっていうのが明確な差別加点というか、利点っていうわけですね。

@spring_raining 18:21
そうですね、 ま、あと、モノレポート向けっていう機能で言うと、そのチェンジセットのファイルにメジャーマイナーパッチのその粒度だけじゃなくて、まどのパッケージに対して、今回のそのチェンジログを適用させるか、みたいな 設定もできるので、まあ、例えばこう全てのパッケージで適用させるような変更があったりした時も、そのファイル1つでいきますし、まあ、特定のこのパッケージとこのパッケージだけ更新みたいな変更であって、も、まファイルを1つ用意

@spring_raining 18:50
してあげればできるっていう点で、まあ、結構そのどのパッケージを流ルーさせるか、みたいな、あの制御は楽ですね。
あと、もう1つ特徴で言うと、これ今回調べて知ったプロジェクトでシップジースっていうのが あるらしくて、割とこっちもあの、セマンティックリリースとは違ってこう

@spring_raining 19:12
リリースタイミングをあの主導で制御するタイプのツールですね。でま、これはどうやってやってるかっていうと、リリース用のプリリクエストを をまず作って、ま、その上でこうシップ、ジースノボットと対話してま。リリースするみたいな 機能を持っているらしい。これも、あの今調べて知ったものなんで、そういったものになるんですけれども。

@spring_raining 19:38
まあ、それとの違いで言うと、やっぱりスチェンジセットはまあ、モノリポ特化っていう利点と、あとは、 ギットハブ上のボットに依存しないっていうところも、まあまあ大事なところですね。えっと、ちなみに、えっと、私のプロジェクトでは、えっとま、 どうやってリリースしてるかっていうと、えっと、ま、社内のえ、サークルciがありまして、ま、そこに、マニュアルアプローバルっていう機能が

@spring_raining 20:06
あります。で、まあ、ciが回った後にこう権限のある人がなんか、ボタンポチっと押したら、そのciが進むみたいな 機能があるんですけど、もまそこであの制御して。まあ、アプロバルをしたら、その時点での変更点が全部リリースされるみたいな 感じで、えっと、運用してます。んなんでま、そういったこう、カスタマイズがしやすいっていうところがま、チェンジセットの良いところですね。

@potato4d 20:34
じゃ、やっぱり柔軟性ま、ちょっとえっと、低めがおっきいだけあって、柔軟性に炊けているんで、まこう使いこなせるように慣れさえすれば、やはりこう。
他のツールとえー比較すると、セマンティックリリースみたいな、そういったこう、ログ自体の品質面インみたいなところもそうですし、こう、リリースタイミングの方でも、シipjsにと比較して柔軟であったりっていうので、こう結構 上位五感とまでは言わないですけど、感じになっていくわけですね。

@spring_raining 20:59
そうです、そうですあの、柔軟生dは、結構あのチェンジセットが1番有位だったというところです。
まあ、あのー、シップジース1番いいのはかっこいいんですよね。こう見た目が

@potato4d 21:10
あこそうなんであ、

@spring_raining 21:12
夫と対話してこうリリースするっていうなんかまgットハブの。まあ、ワークフローに沿った 沿ったというか、まあ、こう誰でもそのりリリースの作業の様子が見れるみたいな、そういった良さはあるんで ま、本当にこうgッドハブ上の純粋なossとかだと、シpjsも良さそうだなっていうのは結構思いましたね。

@potato4d 21:34
じゃ、なんか、別のプロジェクトで機会があったら、ぜひ使ってみたいみたいな感じですかね。そうですね、

@spring_raining 21:40
これもなかなかoss的には割と良さそうと思いました。

@potato4d 21:45
いいですね、

@potato4d 21:49
と、結構ここまでこうチェンジセットの良さをいっぱい語ってもらったかなと思うんですけど、なんか、タマタさんは次以降は結構あれですかね。今回の件も含めて こうプロジェクトの規模問わず、賃理セットを使っていきたいなって感じありますかね。

@spring_raining 22:02
そうですね、あの、結構あのモノレポ前提と言いつつも、数は問わない機能になっているので。そうですね。チェンジセットに向かない状況って、あんまり思いつかない ですね。なんか、もうとに、とにかく楽してリギリスしたいとかでなければ、全然チェンジセットでいいんじゃないかな、と。はい、なるほど思います。

@potato4d 22:25
一切こう、コストかけたくないみたいな時は、こう自動生成が魅力的には一応なるがま、それでもなく、少しでもコストかけていいなら、もうチェンジセットが1番いいかなって感じですかね。そうです、そうです

@spring_raining 22:35
ま、手元でまリリースするっていうことも、絶対そ、それ以上こう発展しない。
もうお遊びプロジェクトとかそういった感じだったら、まあまあちょっと重いかなっていう程度ですね。

@potato4d 22:48
なるほど、なるほど、ちょっと私も私、いつもスタンダードバージョンっていう、セマンティックリリースみたいなやつを使ってるんですけど、なんか、スタンダードバージョンって、結構タグ打ったりとか、色々してくれて 便利。プラス。あのスキップの設定ができるんで、なんかこうあの、コミットだけフォールスにしておくことによってこう。あの、自分でチェンジログを手直しした後に、 なんかこうあの、たったりみたいな感じでこれでやってたんですけど、

@potato4d 23:11
なんだかんだやっぱりコミットベースになってて、不満も多かったし、なんかこれ客観的に見て、リリースノotがリリースnoteとして、 意味をなしてないなって思うことも多かったんで、ちょっとチェリセット使ってみようかなと思いました。
いや、ぜひぜひ、そうなんか、あのふ。フィートだけ意味あるけど、フィート以外何も意味がないんだよなって、ログに結構なりがちなんで、

@potato4d 23:35
ちょっと使ってみようかなと思いました。そうです

@spring_raining 23:37
あとま、モノリポてなんか結局物ノリポになってしまうっていう状況割と最近多いかなと 持ってて、例えばなんて言うんですかね。そのメインの機能と、デモアプリみたいなのを用意したいなっていう時に、リリースはしないけれど、もまもうなでぽにして、

@potato4d 23:55
あー、依存関係を作りそうです。たい、そうやうですね

@spring_raining 23:58
ってなると、ま、結局なんかモデレポになっちゃうなっていうのを最近 は持ってるので、まあ、本当になんかパッケージ1つだけしかイリースしない前提。でも まも最初だ。もう、とりあえず、モノデポにししてしまうっていうのも1つの手かなとは思いましたね。

@potato4d 24:14
なるほど、確かにそれも1つの選択肢ではありそうですね、そんな感じですかね、

@spring_raining 24:21
はい、

@potato4d 24:22
では、えーと、皆さんもぜひチンジセーツ使ってみてもらえればと思います。

@potato4d 24:31
というわけで、今回はえーチェンジセットについて、たまさんに話を聞いてみました。
え、このpodcastを聞いて、えー、lineに興味を持ってくださった方はですね。えー、ぜひぜひsnoteのえーと、再株にある求人のリンクから、えー、カジュアル面談とか、選行であったりっていうところを申し込んでいただければと 思います。今は、えー、新卒中とともに一体復習しておりますので、え、ぜひお気軽にお声描きください。また、このコトキャストについてのご意見やご感想はえー、ハッシュタグ、えーハッシュ、uit、アンダースコアインサイド見てえー。受け付けております。

@potato4d 25:02
えー、ツイートしてもらえればですね、スタッフの方が定期的にえ、見ておりますので、ま、何かしらのあのができるかなと思います。ぜひ、ツイートたいただければと思います。
てわけで、今回はチ事施設について紹介していきました。ありがとうございました、

@spring_raining 25:18
ありがとうございました。
@potato4d 00:04
こんにちは、uitのポテトポーディーです。ユーザーインターフェースと、テクノロジーを愛する。えー、開発者のためのウィープリーポット、キャスト、 uiteサイド、今週も始めていきたいと思います。え、今回はですねえ。フロントndのプロジェクト、jav、スクリクトプロジェクトのえー バージョニングをえー管理できるようなえ、ツールであるチェンジセットについて、えーたさんにお話を聞こうかなと思ってます。えーたま田さんよろしくお願いいたします

@spring_raining 00:31
よろしくお願いします。

@potato4d 00:40
えー、では、早速チェンジ設について話していきたいなと思うんですけど、まずは、チェンジ設がどういうものかっていうのを教えいただいてもよろしいですかね。

@spring_raining 00:48
はい、そうですね、あの、先ほど紹介いただいた通り、えっとまバージョニングツールですね。で ま、バージョニングツール使ったことない方もいるかもしれないんですけども。まあ、要するにこうnpmパブリッシュとか、 あと、gitハブのまリリース作業とかをま、自動でやってくれるツ

@spring_raining 01:08
プラス。えっとま、バージョニングなんで、パッケージのバージョンをま、例えば、1.0.0とかそういった感じで、バージョンニングを上げるのをま、自動でやってくれるツールっていうものになります。
でま、チェンジセットはま、その中でも特徴としては、多分モノレポ向けっていう言われ方がよくされてるのかなと思うので、まあ、モノレま要するに、その ふ複数のま、パッケージを1つのリポジトリでえ、管理するプロジェクトに向いたツールということになります。

@potato4d 01:39
おお、なるほど、なるほど、じゃあ、かなりちゃんとモノリポに特化しているみたいな、あの独特の特徴がある感じなんですね。

@spring_raining 01:46
そうですね、一応あのまああのシングルポジトでも大丈夫とは書いてるんですけど、もまあのし、仕組みが結構のえぽに特化してるっていう感じです。

@potato4d 01:56
ただ、これあれなんですね。あの、リリースnoteを書くっていうよりは、リリースフロー全部を任せられるバージョニング全般、 お任せられるツールっていう風な感じなんですかね。

@spring_raining 02:06
そうですね、はい、役割がまそれぞれのツールによって分かれているんですけれども まチェンジセットの場合、えっと、バージョニングとリリースは一緒にやってくれるツールになりますね。で、後で紹介するんですけれど、もまチェンジログを 書いて、まあリリースをするとま適切なバージョンが選択されて、そのバージョンでファブリッシュされて、あと、チェンジログのマークダウンファイルがま更新されるみたいな

@spring_raining 02:32
ツールがまあそこまで一貫してまやってくれるというツールになります。

@potato4d 02:37
なんか、他のパブリッシュ作業とかって、どういったところまでやってくれるんですかね。

@spring_raining 02:40
ああ、そうですね、パブリッシュは、チェンジセットっていうファイルがありましてま、それをま書くことによってま、制御するんですけど、も、 まあ、のどどこまでと言われるとぜ。全全部全部全部って感じですね。

@potato4d 02:55
結構なんかうちらだと、あのプライベートnpmとか使ってると思うんですけど、そこへのファブリッシュとかもやってくれるみたいな。

@spring_raining 03:01
あ、そうです。そうです、そうですあのー、後であの紹介しようかなと思ってたんですけど、結構競合のツールと比べると、まあ、なんて言うんですか。環境依存が少ないというか、まあ、 割とどの環境でも置くみたいなところも特徴なので、例えば、 そのまツールによると、まgットハブのアクションとか、あと、gットハブのボットとかい、一体化したプロジェクトとか、えーツールとかがあったりするんですけども、

@spring_raining 03:27
これは結構まあ、実態は完全なあのコマンドラインのツールになります。おお、

@potato4d 03:33
かなりじゃあ、現場問わず使えるっていう強みがあってま。一方で、その使いたいやつはちゃんと全部入ってるみたいな

@spring_raining 03:40
そうです。そうです、

@potato4d 03:41
なるほど、ありがとうございます

@potato4d 03:45
えと、そのえーチェンジセットについてなんですけど、そもそもなんかまこういったものって、結構ライブラリを管理するみたいな機会がないと、こう使う機会が出てこないかなと思うんですけど、なんか、どういったモチベーションがあって、導入することになったんですか。

@spring_raining 03:58
あ、そうですね、そ、これを説明した方が良いかもしれないですね。あの、今回作ろうとも たのはえっとまuitイブイなんですね。でま、プロジェクトがおっきなプロジェクトがあってま、その中で共通のコンポメントであったり、ま、uiをこう共通化させる必要がああり ま、その一環で、まあ、cssライブラリーみたいなのよりは、もうちょっとこう豪華なま。例えば、ボタンみたいな汎用のライブラリーは必要だったんですね。

@spring_raining 04:26
でま、それを今回作る必要があったんですけれども、それをま実現するために、まいろんなバージョニングツールを 探していました。でま、具体的な要件としては、結構まモノレポにするっていうのは、まず前提だったんですね。というのも、 あのま、uyのコンポネントライブラリなんで、まあ、

@spring_raining 04:48
全部インストールする必要はなくて、例えば、このuiとこのuiを使いたい場合は、このパッケージをインストールするみたいな。そういった使い方を今回したいなと 思っておりました。で、あとは、コンポーネントをま更新 するタイミングっていうのが、まあ揃えられないっていう事情がありました。ま、要するに、そのあるコンポーネントを

@spring_raining 05:10
作成してま、その中でなんかこう足りない機能がありましたとかで、まあ足りない機能をコンポネントに追加した上で、こうバージョンアップ させたいんですけれども、まあ、そのコンポーネント すでに使ってるプロジェクトがあってま、そのコンポンメントバジョン上げることによって、その機能を追加していない側のプロジェクトで、何か問題が発生するみたいなことも

@spring_raining 05:33
ま予想されるし、ま、そのバージョンを上げることに、それぞれ依存してるプロジェクトを全部 あのリリースしないさなければいけないっていう問題もあったので、要するに。まあ、本当にこうのま。パブリックなnpmパッケージを インストールするかのようなま使い勝手が今回求められたところが

@potato4d 05:53
ありました。じゃ、結構あれですね、こう、社内ツールって、そういったところ、こうなんでしょう。簡易的なものでやりがちですけど、こう本格的な。やはり、体験を提供する必要があったから、 ま、ちょっとツールの方も、できるだけ重効なものを求められていたっていう風なところなんですね。

@spring_raining 06:08
そうです、そうですまあ、あの、そのプロジェクトがま、結構こう。知らない人が触ったりとかっていう状況も降りるような 規模のプロジェクトだったっていうところがありましたね。

@potato4d 06:19
なんか、そんな中でこうチェ理設ツにした決め手みたいなのは、なんかあったりするんですかね。

@spring_raining 06:23
あー、そうですね、そこで言うと、まいろんなプロジェクトを探してみて、1番決め手だったのは、割と 実績があったっていうところが、もしかしたら強いのかもしれないですね。あのー、結構 チャンニセットのリードミーに書いてあるんですけど、もま、例えば、エモーションとか、アストロとか、スベルトキットあたりですね。ま、そういった結構

@spring_raining 06:48
ossのプロジェクトで、実績があったっていうところはま、今回重視したところですね。まあ、結構 あのさっきのお話の内容的に結構ま社内ossと言いますか。
割と誰でもまあ開発に参加するしてま。誰でも使えるようにさせる必要があるっていうところで言うと、やっぱりこうoss的な

@spring_raining 07:11
やり方に寄せていった方が良いのかなと思いま。そういったのを考えてま。チェジセットを選んだという。なるほど、なるほど、

@potato4d 07:20
じゃ結構あのモデルにしているのがossだったんで、ま、そこでの利用実績がこう近いものを 探して、まあ、それだけ大きなossで使われてるんだったら、我々のこういうスケースだと、もちろん十分に目指せるだろうっていう風なところが決め手だったわけですね。

@spring_raining 07:36
そうです、そうですあの、まああの使う前は結構ま心配だったところも結構あって、まあ、単純にギットハブドットコムでしか使われてるのは見たことなかったんで、 社内のgットハブで、そもそも使えるのかとか、やり方が 噛み合うのかどうかみたいな心配はあったんですけど、もま幸い。後からなんか気づいたんですけども、環境に依存しないっていう

@spring_raining 07:58
差があったので、ま、そういった面でも今回良かったなと

@potato4d 08:01
思ってます。なるほど、 確かになんかんghaとかって、あんまりこう。よく使われている環境ではないというか、なんであの、ちょっと心配だったりしますけど、実際ちょっと気があったりとかありますけど、 意外とそんな心配事は何もなくって感じだったんですね。

@spring_raining 08:17
そうです、そうですま、そこは本当に良かったです

@potato4d 08:21
なか。ちなみに、他ツールを探してる時に、結構他のなんか案も出てくるかなと思うんですけど、こう他のバージョニングツールと比較して、 なんかこう。チェンジセッツのこういうところはいいけど、なんか、他こういうとこの魅力があって、他のツール、例えば、こういったツールは検討しましたみたいなのってあったりしますかね。

@spring_raining 08:40
あ、そうですね、ま、チェンジセット結構カバーしてる範囲が広いので、ま、どういっため目線で比べるかっていう ところもあるかなと思うんですけど、ま、2つなんかこう見方があるのかなと思っていて、1つはまあ、単純にその物ノレポ のツールって、まあ、例えばラーナとかもバージョニングツールの機能があるので、ま、それをまなぜ使わなかったのかっていう点と、

@spring_raining 09:06
ま、あとま純粋に、まあ、モノエポじゃないリリースツールと比べてどうだったかっていうところで、まあ 2つ観点があるのかなと 思ってまして。えーっと、1つ目のモノレポ向けのバージョニングツールとして見ると、結構まチェーンジセットって繰り返しになっちゃうんですけど、依存があんまりないっていうところが

@spring_raining 09:28
決めてだったのかもしれないですね。ま、モノレポって結構あんまり選択肢ないようで、意外とあって、nxとか、 あー、アーボレポとか、イヤンワークスペースとか、結構色々バラバラだったとすると思うんですけども、多分ま、どれでも使えます。じゃあ、ほ、

@potato4d 09:44
本当環境を選ばないって感じなんですね、

@spring_raining 09:46
そうです、そうですま、そのプロジェクトの構成とかもあれですね、勝手にあの探してきてくれますね、チェーンズセットがで

@potato4d 09:53
おおすごいです

@spring_raining 09:54
ね。それはそうそう、そうす、あの、本当になんかパッケージジェーションがあるところを探して、で、チェンジセットっていうファイルに、そのチェンジログを書いていくんですけれども、 まそこにそのまリリースしたいパッケージ名を書くみたいなことをやるんですね。で、そこのファイルだけがま情報になるので、 あんまりそのモレポの他の機能とかもプリクトするみたいなことはなさそうっていうところはあります。

@potato4d 10:21
カバー範囲が広いけれども、まあ、結構その他のツールとは喧嘩しないようにに作られてるそうです。そうです

@spring_raining 10:27
あー、あと一点まあるとすると、まチェンジセットの仕組み上、結構他のもの、レポだと、そのパッケージ全体でバージョンを揃えるっていう機能が あったりするんですけれども、チェンジセットはあれですね。パッケージがけど、独立してバージョン上げる 前提の実装になってるので、ま、そこはあの気を付けないといけないですね。つまり、あのラーナのインデペンデントモード

@spring_raining 10:53
である。あると思うんですけど、もま、それがま有効になった状態っていうのがま、デフォルトっていう感じになります。

@potato4d 11:00
あの、逆にあれですよね、こう あの、独立してる方がそれぞれ個別でバージョンあげやすいんで、まあ、まとまってる方が、全部のバージョン番号合わせるときは、合わせやすいみたいな利点ももちろんありますけど、 こう別れて方が柔軟には設定しやすいですし、そうそうなんかこう利点でもあり、欠点でもあるっていうか、なんかこう使う人次第な感じはそこはありそうですね。

@spring_raining 11:18
そうですよね、あの、結構これはプロジェクトの性質次第っていうところですね。ですね、 で、えっとままもう1つのまリリースツール として考えると、これも思想が分かれるところでして。例えば、セマンティックリリースとか、リリースiトとか。

@spring_raining 11:38
なんかコンビニ、ソナルチェンジログとかいっぱいあって、 結構まそれぞれのプロジェクトで、別々のものを使ってる感じかなと思うんです。けれども、チェンジセットの1番特徴的なのは、チェンジせ っていうプロジェクト名で、チェンジセットというファイルがえっとあります。で、チェンジセットっていうファイルに

@spring_raining 11:57
全てそのま情報を書き込んでいくっていうのがま、チェンジ設ッのやり方ですね。で ま、具体的にどうやるかっていうとま、チェンジセッツのプロジェクトを見ると、あのドットチェンジセットっていうデクトリがえっと あります。で、ま、その中にま状況によると思うんですけれども、まいくつかmarkdownファイルが

@spring_raining 12:18
入ってたり、入ってなかったりします。で、ま、そのmrkdownファイルっていうのは、こう自動的に作られるもので、ま、自動的に 作られたマークdウnファイルに今回変更したい機能とかま、チェンジログをそこに書いて、あいくっていうフローを取ります。
で、ライブライによるんですけども、チェンジセットの場合は主動でリリースします。で、チェンジセット、パブリッシュっていうコマンドがあって、それを実行すると、ドットチェンジセットの中にある。えっと、マークダファイルを元にしてまバージョン

@spring_raining 12:51
を上げたり、チェンジログを書いたりっていう感じで動くっていう流れになっています。で、これ結構 他のリリースツールと全然違うので、割と特殊っぽい感じはするんですけども、結構これは うまく動いてるなっていうところは、今のところの印象ですね。で、多分1番周派が分かれそうなのはセマンティックリリース、

@spring_raining 13:15
いわゆるあのあれですね。コミットメッセージから、チェンジログを書くやつですね。あれとは全然やり方が違うので、まあ、好みっちゃ好みなんですけれども、あんまり 個人的にそのコミット単位で、そのリリースのチェンジログに書くような機能を書くことって、そんなに ないんじゃないかなっていう。まあ、あの綺麗にこうコミットしていければできるんですけれど、も、まプロジェクトによってはこうなんて言うんですかね。こう、

@spring_raining 13:41
色々こう試してみてやるみたいな感じにあると思うんで、そういったなんか、こう試しのコミッとか全部あの、なんて読むんですかね。ちょわ、

@potato4d 13:51
はいはいはいはあれですよね。あの、スカッシュマージとかしてなくて、普通のマージしてるプロジェクトになると、結構そのゴミになるようなコミットがたくさん溜まってしまって、こう なんか、なんフィックスみたいなことが書いてあるようなこう、絶対テンポラにな、コミットメッセージがこうリリースノートに入っちゃって、その読む側からしたら何かわからなくて、 でも、なんかとはいえ、こう結構自動生成するやつとかって、コミットハッシュまで一緒に書いてくれるんで、こう邪魔だなと思って消すと、それはそれで追えなくなるみたいなのが結構あって、

@potato4d 14:19
なんか自動生成ゆえの、なんかこう融通の効かなさというか、こう ま情報としてはあるんだけど、読み手側に優しくなってるかっていうと、優しくないってのが結構ありますもんね。ま、

@spring_raining 14:29
まさしく、まさしくそうそうなんですよ。あのー、 チェンジセットのなんか、コンセプトみたいなページがあって、ま。そこに書いてあると、ところで言うと、機能を1つの機能として、まとめるとしたら、 まあ、プルリクエストの単位が多分いいんじゃないかっていうま、提案がしていて、まあ、

@spring_raining 14:49
私も個人的にあの同意見で、そのま。プリリクエストに1つのチェンジログ の項目があるみたいなところが、まあま粒度的にはちょうどいいんじゃないかっていう ところが、セマンティックリリースとの違いになりますね。

@potato4d 15:05
確かに、なんか、プルリケュエストごとって言われると、すごいひっくりくるというか、なんていうか、 実際まとまったコードの量じゃないと、アブルーブがつかないし、マージもされないから、必ず一定の情報量が担保されてる感じはありますね。

@spring_raining 15:17
そうですよね、これは、本当にま好みではあると言われればそこまでなんですけども。まあ、プbリクエスト単位でそういう項目ができるっていうのは、直感的だなという 感想を持ちました。

@potato4d 15:29
いいですね、なんかこうあれですよね、自動生成系でも、もはやプルリクエストベースにしてほしいなって思っちゃいます。

@spring_raining 15:39
まあ、それもできるのかな。いや、でも、セマンティックリリースは少なくとも、なんかコミット単位ですよね。
ま、あと、一応ルールに従わせたい意味で言うと、一応チェンジセットボットっていうのがありましてま、これ、ギットハブドットコム専用だと思うんですけれども、あのま、フルリクエストに対して、チェンジセットっていうファイル単位で リリースを管理するので、まあるプロジェクエストに対して、こうチェンジセットのファイルがなかったら、ま、一応こう注意するみたいなフローを取ることはできます。

@potato4d 16:10
おお、なるほど、そういうちゃんと正しく運用するためのボットみたいなもあるんですね。

@spring_raining 16:17
そうです、そうですま、そのボットとかそういうフローに従っていれば、ま。プルリクエストの単位で、少なくとも、チェンジログが 書くことはできるっていう感じになります。

@potato4d 16:28
いいですね、なんかこう聞いててすごいこう なんでしょう。読み手側と書き手が両方にとって、結構嬉しい形になってるなと思って、すごいいいなと思いました。
なんか、これただ結構そこまで毎回ボットで怒られて、頑張って。チェンジセットの

@potato4d 16:47
ディレクトリ内のファイル書みたいなのって、なんかこう聞く分には結構大変なのかなと思ったりするんですけど、実際やってみるとそうでもないんですかね。

@spring_raining 16:54
そうですね、あの、一応cはあるんですよね、で、あのcliで確かチェンジセットでサブコマンドなしで実行したら、ウィザードみたいなものが

@spring_raining 17:06
てきて、はい、対話型のやつが出てきて、まあ、今回の変更はメジャーですか。マイナーですか、パッチですか。みたいな質問から、ここにメッセージ書いてください。
で、あのエンター押すと、多分その内容に従ったマクダファイルができるっていう感じになってるので、ある程度はカバーしてもらえるところです。

@potato4d 17:25
しかに、なんかそれぐらいだったら、かつプルリクごとに1回ぐらいだったら、そんなにこう大業じゃないんで、なんとか

@spring_raining 17:32
こい

@potato4d 17:33
なりそうですね。そうですね、

@spring_raining 17:34
ファイルベースのいいところは、最悪、そのコミットした人以外がファイル作っちゃってもいいっていうところはあるんで、 一応ま、そういったまでも、多分実装した人が書くのが1番いいです。

@potato4d 17:45
でも、なんかそれこそなんかoss的にこう他の人が追記して助けるみたいなのも一応できる、 できてたらできるって感じですね。そういうことですだ、あれですよね、それこそ、例えばこうプルリック誰かが 送ってきてくれたけど、ま、チェンジセットまで書くのは覚えてもらうのも大変だし、みたいな時にシュットきたすみたいなのやろうと思えばできるみたいな

@spring_raining 18:03
そうです。そうです、それはできま

@potato4d 18:05
あいいですね、じゃ、意外と大変じゃないし、めんどくささみたいなところはそんなに変わらずに、まあ、ちょちょっと多少ステップは増えるとはいえ、できるだけ低コストに こうちゃんとしたチェンジロッグが生まれるっていうのが明確な差別加点というか、利点っていうわけですね。

@spring_raining 18:21
そうですね、 ま、あと、モノレポート向けっていう機能で言うと、そのチェンジセットのファイルにメジャーマイナーパッチのその粒度だけじゃなくて、まどのパッケージに対して、今回のそのチェンジログを適用させるか、みたいな 設定もできるので、まあ、例えばこう全てのパッケージで適用させるような変更があったりした時も、そのファイル1つでいきますし、まあ、特定のこのパッケージとこのパッケージだけ更新みたいな変更であって、も、まファイルを1つ用意

@spring_raining 18:50
してあげればできるっていう点で、まあ、結構そのどのパッケージを流ルーさせるか、みたいな、あの制御は楽ですね。
あと、もう1つ特徴で言うと、これ今回調べて知ったプロジェクトでシップジースっていうのが あるらしくて、割とこっちもあの、セマンティックリリースとは違ってこう

@spring_raining 19:12
リリースタイミングをあの主導で制御するタイプのツールですね。でま、これはどうやってやってるかっていうと、リリース用のプリリクエストを をまず作って、ま、その上でこうシップ、ジースノボットと対話してま。リリースするみたいな 機能を持っているらしい。これも、あの今調べて知ったものなんで、そういったものになるんですけれども。

@spring_raining 19:38
まあ、それとの違いで言うと、やっぱりスチェンジセットはまあ、モノリポ特化っていう利点と、あとは、 ギットハブ上のボットに依存しないっていうところも、まあまあ大事なところですね。えっと、ちなみに、えっと、私のプロジェクトでは、えっとま、 どうやってリリースしてるかっていうと、えっと、ま、社内のえ、サークルciがありまして、ま、そこに、マニュアルアプローバルっていう機能が

@spring_raining 20:06
あります。で、まあ、ciが回った後にこう権限のある人がなんか、ボタンポチっと押したら、そのciが進むみたいな 機能があるんですけど、もまそこであの制御して。まあ、アプロバルをしたら、その時点での変更点が全部リリースされるみたいな 感じで、えっと、運用してます。んなんでま、そういったこう、カスタマイズがしやすいっていうところがま、チェンジセットの良いところですね。

@potato4d 20:34
じゃ、やっぱり柔軟性ま、ちょっとえっと、低めがおっきいだけあって、柔軟性に炊けているんで、まこう使いこなせるように慣れさえすれば、やはりこう。
他のツールとえー比較すると、セマンティックリリースみたいな、そういったこう、ログ自体の品質面インみたいなところもそうですし、こう、リリースタイミングの方でも、シipjsにと比較して柔軟であったりっていうので、こう結構 上位五感とまでは言わないですけど、感じになっていくわけですね。

@spring_raining 20:59
そうです、そうですあの、柔軟生dは、結構あのチェンジセットが1番有位だったというところです。
まあ、あのー、シップジース1番いいのはかっこいいんですよね。こう見た目が

@potato4d 21:10
あこそうなんであ、

@spring_raining 21:12
夫と対話してこうリリースするっていうなんかまgットハブの。まあ、ワークフローに沿った 沿ったというか、まあ、こう誰でもそのりリリースの作業の様子が見れるみたいな、そういった良さはあるんで ま、本当にこうgッドハブ上の純粋なossとかだと、シpjsも良さそうだなっていうのは結構思いましたね。

@potato4d 21:34
じゃ、なんか、別のプロジェクトで機会があったら、ぜひ使ってみたいみたいな感じですかね。そうですね、

@spring_raining 21:40
これもなかなかoss的には割と良さそうと思いました。

@potato4d 21:45
いいですね、

@potato4d 21:49
と、結構ここまでこうチェンジセットの良さをいっぱい語ってもらったかなと思うんですけど、なんか、タマタさんは次以降は結構あれですかね。今回の件も含めて こうプロジェクトの規模問わず、賃理セットを使っていきたいなって感じありますかね。

@spring_raining 22:02
そうですね、あの、結構あのモノレポ前提と言いつつも、数は問わない機能になっているので。そうですね。チェンジセットに向かない状況って、あんまり思いつかない ですね。なんか、もうとに、とにかく楽してリギリスしたいとかでなければ、全然チェンジセットでいいんじゃないかな、と。はい、なるほど思います。

@potato4d 22:25
一切こう、コストかけたくないみたいな時は、こう自動生成が魅力的には一応なるがま、それでもなく、少しでもコストかけていいなら、もうチェンジセットが1番いいかなって感じですかね。そうです、そうです

@spring_raining 22:35
ま、手元でまリリースするっていうことも、絶対そ、それ以上こう発展しない。
もうお遊びプロジェクトとかそういった感じだったら、まあまあちょっと重いかなっていう程度ですね。

@potato4d 22:48
なるほど、なるほど、ちょっと私も私、いつもスタンダードバージョンっていう、セマンティックリリースみたいなやつを使ってるんですけど、なんか、スタンダードバージョンって、結構タグ打ったりとか、色々してくれて 便利。プラス。あのスキップの設定ができるんで、なんかこうあの、コミットだけフォールスにしておくことによってこう。あの、自分でチェンジログを手直しした後に、 なんかこうあの、たったりみたいな感じでこれでやってたんですけど、

@potato4d 23:11
なんだかんだやっぱりコミットベースになってて、不満も多かったし、なんかこれ客観的に見て、リリースノotがリリースnoteとして、 意味をなしてないなって思うことも多かったんで、ちょっとチェリセット使ってみようかなと思いました。
いや、ぜひぜひ、そうなんか、あのふ。フィートだけ意味あるけど、フィート以外何も意味がないんだよなって、ログに結構なりがちなんで、

@potato4d 23:35
ちょっと使ってみようかなと思いました。そうです

@spring_raining 23:37
あとま、モノリポてなんか結局物ノリポになってしまうっていう状況割と最近多いかなと 持ってて、例えばなんて言うんですかね。そのメインの機能と、デモアプリみたいなのを用意したいなっていう時に、リリースはしないけれど、もまもうなでぽにして、

@potato4d 23:55
あー、依存関係を作りそうです。たい、そうやうですね

@spring_raining 23:58
ってなると、ま、結局なんかモデレポになっちゃうなっていうのを最近 は持ってるので、まあ、本当になんかパッケージ1つだけしかイリースしない前提。でも まも最初だ。もう、とりあえず、モノデポにししてしまうっていうのも1つの手かなとは思いましたね。

@potato4d 24:14
なるほど、確かにそれも1つの選択肢ではありそうですね、そんな感じですかね、

@spring_raining 24:21
はい、

@potato4d 24:22
では、えーと、皆さんもぜひチンジセーツ使ってみてもらえればと思います。

@potato4d 24:31
というわけで、今回はえーチェンジセットについて、たまさんに話を聞いてみました。
え、このpodcastを聞いて、えー、lineに興味を持ってくださった方はですね。えー、ぜひぜひsnoteのえーと、再株にある求人のリンクから、えー、カジュアル面談とか、選行であったりっていうところを申し込んでいただければと 思います。今は、えー、新卒中とともに一体復習しておりますので、え、ぜひお気軽にお声描きください。また、このコトキャストについてのご意見やご感想はえー、ハッシュタグ、えーハッシュ、uit、アンダースコアインサイド見てえー。受け付けております。

@potato4d 25:02
えー、ツイートしてもらえればですね、スタッフの方が定期的にえ、見ておりますので、ま、何かしらのあのができるかなと思います。ぜひ、ツイートたいただければと思います。
てわけで、今回はチ事施設について紹介していきました。ありがとうございました、

@spring_raining 25:18
ありがとうございました。
