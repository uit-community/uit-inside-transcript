@potato4d 0:00
こんにちは、UITのpotato4dです。

@potato4d 0:11
ユーザーインターフェースとテクノロジーを愛する開発者のためのウィークリーポッドキャスト、UIT INSIDE、今回もやっていきたいと思います。

@a_t 0:30
よろしくお願いいたします

@a_t 0:31
よろしくお願いします

@potato4d 0:32
ではまずはじめに富田さん、軽く自己紹介をお願いしてもよろしいでしょうか。

@a_t 0:36
アクセシビリティチームというところでリーダーをしている富田といいます。
アクセシビリティチームは社内でアクセシビリティの推進とか啓蒙をしているチームになっています。
それとは別にもともと10年ぐらいHTMLとCSSを各部署でずっとフロントエンドの特にHTMLとかCSS分の各部分を担当していたというようなところから、
今紹介いただいた社内の勉強会などでHTMLとかCSSの新技術の紹介とかというのをしたりしています。

@potato4d 1:05
本日はよろしくお願いいたします

@a_t 1:07
よろしくお願いします

@potato4d 1:08
結構普段のアクセシビリティとかの業務でHTML、CSSに触れ合うことも多いので、これまでの経歴も含めて今回は調べてみたって感じですね。

@a_t 1:16
はい、そうですね

@potato4d 1:17
では早速聞いていきたいと思うんですけど、結構CSS周りというとキャッチアップする中でドラスティックな変更があるものとかはなんとなく情報をみんなキャッチアップはしつつも、
いつ使えるんだっけみたいに悩む人も多いかなとは思うんで、今回ちょっと発表の中でいろいろ触れられていた中で、
もう今すぐ書き方変わるよとか今すぐ使えるよみたいな、ちょっと実践的なやつがあったらまずお伺いできればなと思うんですけど、何かあったりしますでしょうか。

@a_t 1:44
はい、そういう意味で言うと今そろそろ使えそうになってきているというところがコンテナサイズクエリと言われるものになります。
こちらはコンポーネント単位でスタイルを制御するものになっていて、近いものとしては今まで使っていたメディアクエリに非常に似ています。
メディアクエリが端末や表示しているメディアのサイズや特性（ランドスケープ、ポートレートなど）に合わせてスタイルを切り替えていたのに対し、
コンテナサイズクエリは特定の要素を指定して、その下の要素がその指定したコンテナのサイズに応じてスタイルを変えることができます。
なので今までメディアクエリで広い範囲でしかできなかったものが、特定のモジュールに限定して使えるようになった形です。

@a_t 2:34
こちらが対応しているブラウザのバージョンが結構広く整ってきていまして、
Safariだと16.0から使えるようになっていたり、Chrome、Edge、Firefoxもモダンなブラウザで実装が整ってきたので、
そろそろ使っても問題ないかなという状況になってきています。

@potato4d 2:52
なるほど、ありがとうございます。
結構コンテナサイズクエリって発表された頃から注目はありつつも、使えるのはまだ先かなという感じが続いていた技術でもあるかなと思いますが、
もう今は全ブラウザで安心して使えるようになった感じですね。

@a_t 3:06
はい、そうですね。
そこのところは実際のサービスのアクセスログを確認して使えるかどうか判断していただく必要がありますが、
基本的にはモダンブラウザで対応が進んでいるので、そろそろ検討に入れてもいいかなという案内になっているかと思います。

@potato4d 3:22
なるほど、ありがとうございます。
Latest to Browsersみたいなのを適用しているプロダクトも多いかなと思いますが、その辺りだとかなり安心して使えそうなので、どんどん実践投入していきたいですね。

@a_t 3:34
はい、そうですね。ありがとうございます。

@potato4d 3:36
じゃあちょっともう早速次も聞いていこうかなと思うんですけど、
発表いただいた中だと、まだ一部のブラウザだと使えるけど、まだまだ少し時間がかかるかなみたいな技術もいろいろあったかなと思います。
その中でも物によってすぐ実践投入しても良さそうなものもあれば、ちょっとこれは危ないかもみたいなものもあったかなと思うんで、
ぜひ良かったら実践投入してみてもいいかもみたいな塩梅のものがあったら、それもお伺いしたいんですけど、どの辺りがありますかね。

@a_t 4:05
あまり影響の大きいものを使ってしまうと、特定の関係で崩れてしまって見えなくなることがあるので、
そういう意味ではテキストの描画を改善する周りの対応をプログレッシブエンハンスメント的に導入してみるのが考えられるかと思います。

@a_t 4:21
その中でも新しめのプロパティとしては、テキストスペーシングトリムで段落の一番最初または最後にある役物（鍵カッコなど）を入れた場合に、
今までは全角の記号だと少しスペースが空いて揃わない問題がありましたが、その余白を取ってくれるプロパティです。
指定しても対応していないブラウザは今まで通り表示され、対応しているブラウザではより綺麗に見えるので、積極的に使っていくことが可能だと思います。

@potato4d 4:55
これまで厳密なカーニングや調整が難しかった部分が自動でできるのは神秘性にもプラスですね。

@a_t 5:08
そうですね。今まで全角で空白が入るから半角の鍵カッコを使ったり、テキストインデントで調整したりと苦肉の策を使っていましたが、
このあたりが楽になるのは非常に良いと思っています。

@a_t 5:26
同様にテキストの描画を改善するものとしては、テキストオートスペースというプロパティがあります。
全角と半角が混ざったテキストの境界に自動でスペースを挿入するものや、日本語で単語中の改行を制限してくれるワードブレイクの値「auto-phrase」なども検討されています。

@potato4d 5:53
読みやすくなりそうですね。auto-phraseは英語でいうワードブレイクのような、単語単位で改行してくれるようになるものですか？

@a_t 6:01
そうですね、そのような機能です。
ただし、広範囲に適用するとパフォーマンスに影響が出る場合もあるので、
全要素に入れるのは避けて、要素を見ながら使うのが良いと思います。

@potato4d 6:25
頑張ればハックでできたことが、ブラウザのレイヤーで解決されるのはありがたいですね。

@a_t 6:35
そうですね。現状ではまだ動作が完璧でないことも多いですが、今後に期待しています。

@potato4d 6:50
テキスト描画まわりはWebKitフォントスムージングなどもそうですが、対応ブラウザでは積極的に使っていきたいですね。

@a_t 7:09
そうですね。ありがとうございます。

@potato4d 7:10
これらを踏まえて、最後にもう一つ、未来的な機能や今後変わりそうな技術についても教えてもらえますか？

@a_t 7:30
はい。調べていく中で一番気になったのは余白の調整です。
特にテキストボックスというプロパティ以外にも新しい実装が始まっていて、
これはテキストの上下や段落の上下に入る余白を消してくれるものです。
行の最初と最後の余白をなくして、テキストの際から始めることができるようになります。

@a_t 8:28
似たようなものにMargin Trimというプロパティもあり、これはコンテナ要素内の最初と最後の要素のマージンを自動で除去するものです。
今まではハック的なCSSを書いていた部分が、直感的な指定で対応できるようになります。

@potato4d 8:52
ギャッププロパティのような感覚で使えそうですね。

@a_t 8:59
そうですね。ギャップの考え方がスタンダードになってきているので、同じような感覚で使えるのは良いと思います。

@potato4d 10:54
コンテナサイズクエリとは別軸で、スタイル制御の部分でも新しい標準が出てきています。
例えばコンテナスタイルクエリや、CSSルールセットの中でif文の形で指定できるものなどです。

@a_t 11:48
コンテナスタイルクエリはまだSafariとChromeのみ対応、if文の方も現状ChromeのみでSafariやFirefoxは未対応です。
どちらもまだエクスペリメンタルな段階ですが、今から使い方を学んでおくと良いと思います。

@potato4d 12:32
CSSにifが来ることを知りませんでした。条件には何が入れられるんですか？

@a_t 12:39
ifの中にはstyle関数を指定し、カスタムプロパティなどの値を条件にできます。
現時点ではカスタムプロパティのみ対応していますが、今後拡張される見込みです。

@potato4d 13:23
このあたりが広がっていくのも楽しみですね。

@a_t 13:26
そうですね。表現の幅が広がるのが楽しみです。

@potato4d 13:33
今回はコンテナスタイルクエリや今後のCSSのアップデートについて見てきました。
今日話した内容はshow notesに概要を貼っておきますので、気になったプロパティがあれば調べたり、プロダクトで使ってみてください。

@potato4d 14:00
というわけで今回は富田さんとともに新しめのCSSについて話していきました。
LINEヤフーのフロントエンドコミュニティUITでは、社内勉強会やプロダクトで得た知見を外部に発信しています。
今後もぜひお聞きください。
ポッドキャストへのご意見ご感想は #UIT_INSIDE でお待ちしています。
というわけで今回は新しめのCSSについて話していきました。ありがとうございました。

@a_t 14:43
ありがとうございました
